{"version":3,"file":"bundle-test-0b27632404aa5055459b.js","mappings":"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;IACD,MAAM,IAAIvU,KAAJ,CAAU,sCAAsC0E,IAAhD,CAAN;EACH;;EACD,OAAO4P,OAAP;AACH;AAGM,SAASjK,eAAT,CAAyBuB,IAAzB,EAA+B4I,EAA/B,EACP;EACI,MAAMzI,KAAK,GAAGH,IAAI,CAACI,QAAnB;EACA,IAAIC,IAAI,GAAGF,KAAX;;EACA,GACA;IACIyI,EAAE,CAACvI,IAAD,CAAF;IACAA,IAAI,GAAGA,IAAI,CAAClH,IAAZ;EACH,CAJD,QAIUkH,IAAI,KAAKF,KAJnB;AAKH;;;;;;;;;;;ACpCD;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC,oHAAoH,iDAAiD;WACrK;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA,8CAA8C;;WAE9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,iCAAiC,mCAAmC;WACpE;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UElDA;UACA;UACA;UACA,qFAAqF,8CAA8C;UACnI","sources":["webpack://Demo/./src/AABB.js","webpack://Demo/./src/Color.js","webpack://Demo/./src/World.js","webpack://Demo/./src/env.js","webpack://Demo/./src/shuffle.js","webpack://Demo/./src/terrain.js","webpack://Demo/./src/test.js","webpack://Demo/./src/util.js","webpack://Demo/./src/style.css","webpack://Demo/webpack/bootstrap","webpack://Demo/webpack/runtime/chunk loaded","webpack://Demo/webpack/runtime/compat get default export","webpack://Demo/webpack/runtime/define property getters","webpack://Demo/webpack/runtime/hasOwnProperty shorthand","webpack://Demo/webpack/runtime/make namespace object","webpack://Demo/webpack/runtime/jsonp chunk loading","webpack://Demo/webpack/before-startup","webpack://Demo/webpack/startup","webpack://Demo/webpack/after-startup"],"sourcesContent":["export default class AABB {\n\n    minX = Infinity;\n    minY = Infinity;\n    maxX = -Infinity;\n    maxY = -Infinity;\n\n    add(x, y)\n    {\n        this.minX = Math.min(this.minX, x);\n        this.minY = Math.min(this.minY, y);\n        this.maxX = Math.max(this.maxX, x);\n        this.maxY = Math.max(this.maxY, y);\n    }\n\n    get x()\n    {\n        return 0|this.minX\n    }\n\n    get y()\n    {\n        return 0|this.minY\n    }\n\n    get w()\n    {\n        return (this.maxX - this.minX) | 0;\n    }\n\n\n    get h()\n    {\n        return (this.maxY - this.minY) | 0;\n    }\n\n    get center()\n    {\n        return [(this.minX + this.maxX)/2, (this.minY + this.maxY)/2 ]\n    }\n\n    grow(n)\n    {\n        this.minX -= n;\n        this.minY -= n;\n        this.maxY += n;\n        this.maxY += n;\n    }\n\n    shrink(dir, amount)\n    {\n        switch(dir)\n        {\n            case 0:\n                this.minX += amount\n                this.minY += amount\n                break;\n            case 1:\n                this.maxX -= amount\n                this.minY += amount\n                break;\n            case 2:\n                this.maxX -= amount\n                this.maxY -= amount\n                break;\n            case 3:\n                this.minX += amount\n                this.maxY -= amount\n                break;\n            default:\n                throw new Error(\"Invalid direction: \" + dir)\n        }\n    }\n}\n","export const LUM_THRESHOLD = 0.03928;\n\nexport const PERCEPTIVE_FACTOR_RED = 0.2126;\nexport const PERCEPTIVE_FACTOR_GREEN = 0.7152;\nexport const PERCEPTIVE_FACTOR_BLUE = 0.0722;\n\n\n// settings this to 2 will enable quicker, less accurate interpolation, 1 will switch to linear\nconst TO_LINEAR_POWER = 2.2\nconst TO_RGB_POWER = 1/TO_LINEAR_POWER\n\nfunction gun_luminance(v)\n{\n\n    if (v <= LUM_THRESHOLD)\n    {\n        return v / 12.92\n    }\n    else\n    {\n        return Math.pow(((v + 0.055) / 1.055), 2.4);\n    }\n}\n\n\n\nconst colorRegExp = /^(#)?([0-9a-f]+)$/i;\n\nfunction hex(n)\n{\n    const s = n.toString(16);\n\n    return s.length === 1 ? \"0\" + s : s;\n}\n\nfunction hue2rgb(p, q, t){\n    if(t < 0) t += 1;\n    if(t > 1) t -= 1;\n    if(t < 1/6) return p + (q - p) * 6 * t;\n    if(t < 1/2) return q;\n    if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n    return p;\n}\n\nexport function getLuminance(color)\n{\n    //const c = Color.validate(color);\n    return PERCEPTIVE_FACTOR_RED * gun_luminance(color.r) + PERCEPTIVE_FACTOR_GREEN * gun_luminance(color.g) + PERCEPTIVE_FACTOR_BLUE * gun_luminance(color.b);\n}\n\n\nexport default class Color\n{\n    r;\n    g;\n    b;\n\n    constructor(r,g,b)\n    {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n\n    mix(other, ratio, out)\n    {\n        if (!out)\n        {\n            out = new Color();\n        }\n\n        if (TO_LINEAR_POWER === 2)\n        {\n            // quick and dirty\n            const r0 = this.r * this.r\n            const g0 = this.g * this.g\n            const b0 = this.b * this.b\n\n            const r1 = other.r * other.r\n            const g1 = other.g * other.g\n            const b1 = other.b * other.b\n\n            out.r = Math.sqrt(r0 + (r1 - r0) * ratio)|0;\n            out.g = Math.sqrt(g0 + (g1 - g0) * ratio)|0;\n            out.b = Math.sqrt(b0 + (b1 - b0) * ratio)|0;\n        }\n        else if (TO_LINEAR_POWER === 1)\n        {\n            // linear is bad, but still might be interesting artistically\n            out.r = (this.r + (other.r - this.r) * ratio)|0;\n            out.g = (this.g + (other.g - this.g) * ratio)|0;\n            out.b = (this.b + (other.b - this.b) * ratio)|0;\n        }\n        else\n        {\n            const r0 = Math.pow(this.r, TO_LINEAR_POWER)\n            const g0 = Math.pow(this.g, TO_LINEAR_POWER)\n            const b0 = Math.pow(this.b, TO_LINEAR_POWER)\n\n            const r1 = Math.pow(other.r, TO_LINEAR_POWER)\n            const g1 = Math.pow(other.g, TO_LINEAR_POWER)\n            const b1 = Math.pow(other.b, TO_LINEAR_POWER)\n\n\n            out.r = Math.pow(r0 + (r1 - r0) * ratio, TO_RGB_POWER)|0;\n            out.g = Math.pow(g0 + (g1 - g0) * ratio, TO_RGB_POWER)|0;\n            out.b = Math.pow(b0 + (b1 - b0) * ratio, TO_RGB_POWER)|0;\n        }\n        return out;\n    }\n\n    multiply(n, out)\n    {\n        if (!out)\n        {\n            out = new Color();\n        }\n\n        out.r = this.r * n;\n        out.g = this.g * n;\n        out.b = this.b * n;\n        return out;\n    }\n\n    scale(r, g, b, out)\n    {\n        if (!out)\n        {\n            out = new Color();\n        }\n\n        out.r = this.r * r;\n        out.g = this.g * g;\n        out.b = this.b * b;\n\n        return out\n    }\n\n    set(r, g, b)\n    {\n        if (r instanceof Color)\n        {\n            this.r = r.r;\n            this.g = r.g;\n            this.b = r.b;\n\n        }\n        else\n        {\n            this.r = r;\n            this.g = g;\n            this.b = b;\n        }\n        return this;\n    }\n\n    toRGBHex()\n    {\n        return \"#\" + hex(this.r) + hex(this.g) + hex(this.b );\n    }\n\n    toRGBA(alpha)\n    {\n        return \"rgba(\" + (this.r) + \",\" + (this.g) + \",\" + (this.b ) + \",\" + alpha + \")\";\n    }\n\n    toHex()\n    {\n        return (this.r << 16) + (this.g << 8) + this.b;\n    }\n\n    static validate(color)\n    {\n\n        let m;\n        if (typeof color !== \"string\" || !(m = colorRegExp.exec(color)))\n        {\n            return null;\n        }\n        const col = m[2];\n\n        if (col.length === 3)\n        {\n            return new Color(\n                parseInt(col[0], 16) * 17,\n                parseInt(col[1], 16) * 17,\n                parseInt(col[2], 16) * 17\n            )\n        }\n        else if (col.length === 6)\n        {\n            return new Color(\n                parseInt(col.substring(0, 2), 16),\n                parseInt(col.substring(2, 4), 16),\n                parseInt(col.substring(4, 6), 16)\n            )\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    static from(color, factor = 1.0)\n    {\n        if (Array.isArray(color))\n        {\n            const length = color.length;\n            const array = new Float32Array(length * 3);\n\n            const f = factor/255;\n\n            let off = 0;\n            for (let i = 0; i < length; i++)\n            {\n                const col = Color.from(color[i]);\n                array[off++] = col.r * f;\n                array[off++] = col.g * f;\n                array[off++] = col.b * f;\n            }\n\n            return array;\n        }\n\n        const col = Color.validate(color);\n\n        if (!col)\n        {\n            throw new Error(\"Invalid color \" + color);\n        }\n\n        col.r *= factor;\n        col.g *= factor;\n        col.b *= factor;\n\n        return col;\n    }\n\n    static fromHSL(h,s,l)\n    {\n        let r, g, b;\n\n        if(s <= 0){\n            r = g = b = l; // achromatic\n        }else{\n\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1/3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1/3);\n        }\n\n        return new Color(\n            Math.round(r * 255),\n            Math.round(g * 255),\n            Math.round(b * 255)\n        );\n    }\n}\n\n","import Prando from \"prando\"\nimport SimplexNoise from \"simplex-noise\"\nimport { Terrain, TerrainTypes } from \"./terrain\"\nimport { resolve } from \"./util\"\nimport env, { TAU } from \"./env\"\nimport shuffle from \"./shuffle\"\n\nimport RTree from \"rtree\"\n\n// A single iteration of Bob Jenkins' One-At-A-Time hashing algorithm.\nfunction hash( x ) {\n    x += ( x << 10 )\n    x ^= ( x >>  6 )\n    x += ( x <<  3 )\n    x ^= ( x >> 11 )\n    x += ( x << 15 )\n    return x;\n}\n\n\nexport const Biomes = TerrainTypes\n    .map((t,i) => t.name !== \"SEA\" && t.name !== \"ROCK\" ? i : -1 )\n    .filter(n => n >= 0)\n\n\nfunction createBiomes(prando)\n{\n    const biomes = new Array(256)\n    for (let i = 0; i < 256; i++)\n    {\n        biomes[i] = Biomes[0 | prando.next(0, Biomes.length)]\n    }\n    return biomes\n}\n\nfunction getRandomValues(prando, count)\n{\n    const out = []\n    for (let i = 0; i < count; i++)\n    {\n        out.push(prando.next())\n    }\n    return out;\n}\n\nexport const MAX_HEIGHT = 120\n\nexport const MAX_LATITUDE = 10800 // 2 * 10 hex patches in cartesian coordinates (not hex q/r)\n//export const MAX_LONGITUDE = MAX_LATITUDE * 2\n\n\n\nfunction norm(rnd, array, slices = 4)\n{\n    let sum = 0\n    for (let i = 0; i < array.length; i += 2)\n    {\n        const weight = array[i + 1]\n        sum += weight\n    }\n\n    const factor = 1/(sum * slices);\n\n    const out = []\n    for (let i = 0; i < array.length; i += 2)\n    {\n        const terrain = array[i]\n        let sliceWeight = array[i + 1] * factor\n        for (let j = 0; j < slices; j++)\n        {\n            out.push(\n                [\n                    terrain,\n                    sliceWeight\n                ]\n            )\n        }\n    }\n\n    shuffle(rnd, out)\n\n    sum = 0\n    for (let i = 0; i < out.length; i++)\n    {\n        const e = out[i]\n\n        const weight = e[1]\n        sum += weight\n        e[1] = sum\n    }\n    \n    return out\n}\n\n\n\n\nexport default class World\n{\n    /**\n     * Initial world seed\n     * @type {number}\n     */\n    seed = 0\n\n    /**\n     *\n     * @type {Prando}\n     */\n    rnd\n\n    /**\n     *\n     * @type {SimplexNoise}\n     */\n    noise\n\n    /**\n     * RTree for faces\n     *\n     * @type {RTree}\n     */\n    rTree = null\n\n    nh = []\n    bo = []\n\n    biomeLookup = []\n    biomeMask = 0\n\n    TROPIC = []\n    MODERATE = []\n\n    constructor(seed)\n    {\n        console.log(\"WORLD: seed = \", seed)\n        \n        this.seed = seed;\n        const prando = new Prando(seed)\n        this.rnd = prando;\n\n        // noise offsets x/y for 3 octaves\n        this.nh = getRandomValues(prando, 6)\n        this.bo = getRandomValues(prando, 9)\n\n        this.biomeMask = prando.nextInt()\n        this.biomeLookup = createBiomes(prando)\n        this.noise = new SimplexNoise(() => prando.next());\n\n        this.rTree = new RTree()\n\n        this.TROPIC = norm(\n            prando,\n            [Terrain.RAINFOREST, 3, Terrain.RAINFOREST_2,3, Terrain.TALL_GRASS,2, Terrain.GRASS,1, Terrain.MUD,1, Terrain.SAND, 1]\n        )\n        this.MODERATE = norm(\n            prando,\n            [Terrain.DARK_WOODS,4, Terrain.DIRT,1, Terrain.WOODS,4, Terrain.TALL_GRASS,4, Terrain.MUD,1,Terrain.SAND, 1, Terrain.GRASS, 4]\n        )\n\n        console.log(\"TROPIC\", this.TROPIC)\n        console.log(\"MODERATE\", this.MODERATE)\n    }\n\n\n    /**\n     * Calculates the height/y-coordinate for the given x/z coordinates.\n     *\n     * @param {number} x\n     * @param {number} z\n     *\n     * @param {number} offset\n     * @return {number} height or y-coordinate\n     */\n    calculateHeight(x, z, offset = 0)\n    {\n        const { noise, nh } = this\n\n        const [ox0, oy0, ox1, oy1, ox2, oy2 ] = nh\n\n        const ns0 = 0.003\n        const ns1 = ns0 * 0.13\n        const ns2 = ns0 * -0.17\n\n        // three octaves of noise\n        const h = (noise.noise3D(ox0 + x * ns0, oy0 + z * ns0, 0) * 0.7 +\n                   noise.noise3D(ox1 + x * ns1, oy1 + z * ns1, offset) * 0.2 +\n                   noise.noise3D(ox2 + x * ns2, oy2 + z * ns2, offset) * 0.1) * MAX_HEIGHT\n        return h\n    }\n\n    getBiome(x,y, z)\n    {\n    \n        const tempNs = 0.00007\n        const moistNs = 0.00005\n        const ns2 = 0.0013\n\n        const [ tempNx, tempNy, moistNx, moistNy, flavorNx, flavorNy, tempNz, moistNz, flavorNz ] = this.bo\n\n        const tempMalus = Math.min(1,1 - Math.cos(y/MAX_LATITUDE * TAU/4) * 4)\n        const moistureBonus = Math.pow(Math.cos(y/MAX_LATITUDE * TAU/4),2)\n\n        const temperature = Math.max(-1, this.noise.noise3D(tempNx + x * tempNs,tempNy + y * tempNs, tempNz) * 0.8 - tempMalus)\n        const moisture = Math.min(1,this.noise.noise3D(moistNx + x * moistNs,moistNy + y * moistNs, moistNz) + moistureBonus)\n        const flavor = (this.noise.noise3D(flavorNx + x * ns2,flavorNy + y * ns2, flavorNz) * 2 + this.noise.noise3D(flavorNy + y * ns2, flavorNx + x * ns2, flavorNx) * 3)/5\n\n        if (z < 0)\n        {\n            if (z < -10)\n            {\n                return Terrain.DEEP_SEA\n            }\n            return Terrain.SEA\n        }\n        else if (z < 12)\n        {\n            return Terrain.SAND\n        }\n\n        if (temperature < -0.25)\n        {\n            return Terrain.ICE\n        }\n\n        if (moisture < -0.3)\n        {\n            if (temperature < 0.8)\n            {\n                return Terrain.STEPPE\n            }\n            else\n            {\n                return Terrain.SAND\n            }\n        }\n\n        let area\n        if (temperature > 0.7 && moisture > 0.8)\n        {\n            area = this.TROPIC\n        }\n        else\n        {\n            area = this.MODERATE\n        }\n\n        let value = 1 + Math.max(-1.5,\n            Math.min(1.5,\n                flavor + moisture * 0.5\n            )\n        ) / 1.5\n\n        const last = area.length - 1\n        for (let i = 0; i < last; i++)\n        {\n            const [terrain, limit] = area[i]\n\n            if (value < limit)\n            {\n                return terrain\n            }\n            value -= limit\n        }\n        return area[last][0]\n    }\n\n}\n","export const SCALE = 10\nexport const TAU = 2 * Math.PI\n\nexport class Env\n{\n    /**\n     * The world\n     * @type {World}\n     */\n    world = null\n\n    init(world)\n    {\n        this.world = world\n    }\n}\n\nexport default new Env()\n","import env from \"./env\"\n\n\nexport default function shuffle(rnd, a) {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(rnd.next(0, (i + 1)));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n","import { BufferGeometry, Float32BufferAttribute, Vector3 } from \"three\"\nimport { forEachHalfEdge } from \"./util\"\nimport { distance } from \"three/nodes\"\nimport AABB from \"./AABB\"\n\n\nfunction calculateNormalFromHeightMap(world, x0, z0)\n{\n    const e = 0.01\n\n    const x1 = x0 + e\n    const z1 = z0\n\n    const x2 = x0\n    const z2 = z0 + e\n\n    const y0 = world.calculateHeight(x0,z0)\n    const y1 = world.calculateHeight(x1,z1)\n    const y2 = world.calculateHeight(x2,z2)\n\n    return calculateNormal(x0, y0, z0, x1, y1, z1, x2, y2, z2)\n}\n\nexport function calculateNormal(x0, y0, z0, x1, y1, z1, x2, y2, z2)\n{\n    const ax = x1 - x0\n    const ay = y1 - y0\n    const az = z1 - z0\n    const bx = x2 - x0\n    const by = y2 - y0\n    const bz = z2 - z0\n\n    const nx = ay * bz - az * by\n    const ny = az * bx - ax * bz\n    const nz = ax * by - ay * bx\n\n    const f = 1/ Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n    // if (f === Infinity)\n    // {\n    //     return [0,1,0]\n    // }\n\n    return [\n        nx * f,\n        ny * f,\n        nz * f\n    ]\n}\n\n\n// console.log(TerrainTypes.map((t,i) => t.name + \": \" + i + \",\").join(\"\\n\"))\n\nfunction initFace(world,face)\n{\n    const patchX = 0\n    const patchY = 0\n\n    const first = face.halfEdge;\n    let curr = first;\n\n    let x = 0\n    let z = 0\n\n    const aabb = new AABB()\n    do\n    {\n        const next = curr.next;\n\n        const x0 = 0|patchX + curr.vertex.x\n        const z0 = 0|patchY + curr.vertex.y\n\n        x += x0;\n        z += z0;\n\n        aabb.add(x,z)\n\n        curr = next\n    }  while (curr !== first)\n    x >>= 2\n    z >>= 2\n\n    face.center = [\n        x,\n        Math.round(world.calculateHeight(x, z)),\n        z\n    ]\n    face.aabb = aabb\n\n    world.rTree.insert(aabb, face)\n}\n\nfunction getArea(face) {\n    const patchX = 0\n    const patchY = 0\n\n    const first = face.halfEdge;\n    let curr = first;\n\n    let area = 0\n    do\n    {\n        const next = curr.next;\n\n        const x0 = 0|patchX + curr.vertex.x\n        const z0 = 0|patchY + curr.vertex.y\n        const x1 = 0|patchX + next.vertex.x\n        const z1 = 0|patchY + next.vertex.y\n\n        area += z1 * x0 - x1 * z0;\n\n        curr = next\n    }  while (curr !== first)\n\n    return area / 2;\n}\n\nfunction initializeFaces(world, faces)\n{\n    faces.forEach(\n        face => {\n            initFace(world, face)\n\n            forEachHalfEdge(face, he => {\n                const { vertex } = he\n                if (vertex.biome < 0)\n                {\n                    vertex.z = world.calculateHeight(vertex.x, vertex.y)\n                    vertex.biome = world.getBiome(vertex.x, vertex.y, vertex.z)\n                    if (vertex.z < 10)\n                    {\n                        vertex.z = 10\n                    }\n\n                }\n            })\n        }\n    )\n}\nclass GeomPerMat\n{\n    world = null\n    indices = []\n    vertices = []\n    normals = []\n    terrain = -1\n\n    constructor(\n        world,\n        terrain\n    )\n    {\n        this.world = world\n        this.terrain = terrain\n    }\n\n\n    triFn()\n    {\n        const vOff = this.vertices.length/3\n        return (a, b, c) => this.indices.push(vOff + a, vOff + b, vOff + c)\n    }\n\n\n    addVertices(x, y, z)\n    {\n        this.vertices.push(x,y,z)\n    }\n\n    addNormal(x, y, z)\n    {\n        const l = Math.sqrt(x * x + y * y + z * z);\n        const f = 1/l\n        x *= f\n        y *= f\n        z *= f\n        this.normals.push(x,y,z)\n    }\n\n    getVertex(idx)\n    {\n        const off = idx * 3\n        const x = this.vertices[off]\n        const y = this.vertices[off + 1]\n        const z = this.vertices[off + 2]\n\n        return [x,y,z]\n    }\n\n\n\n    createThreeGeometry()\n    {\n        if (!this.indices.length)\n        {\n            console.log(\"No geometry for \" + this.terrain.name)\n            return null;\n        }\n\n        // console.log(\"index\", this.indices)\n        // console.log(\"position\", this.vertices)\n        // console.log(\"normal\", this.normals)\n\n        const geometry = new BufferGeometry()\n        geometry.setIndex(this.indices)\n        geometry.setAttribute(\"position\", new Float32BufferAttribute(this.vertices, 3))\n        geometry.setAttribute(\"normal\", new Float32BufferAttribute(this.normals, 3))\n        return geometry\n    }\n}\n\nlet tileNameLookup = [\n    null,\n    \"case-1\",\n    \"case-2\",\n    \"case-3\",\n    \"case-4\",\n    \"case-m5\",\n    \"case-6\",\n    \"case-7\",\n    \"case-8\",\n    \"case-9\",\n    \"case-m10\",\n    \"case-11\",\n    \"case-12\",\n    \"case-13\",\n    \"case-14\",\n    \"case-15\",\n\n    // multi case\n    null,\n    \"case-m1\",\n    \"case-m2\",\n    \"case-3\",\n    \"case-m4\",\n    \"case-m5\",\n    \"case-6\",\n    \"case-7\",\n    \"case-m8\",\n    \"case-9\",\n    \"case-m10\",\n    \"case-11\",\n    \"case-12\",\n    \"case-13\",\n    \"case-14\",\n    \"case-15\",\n]\n\n\nfunction getDistance(x0, y0, z0, x1, y1, z1)\n{\n    const dx = x1 - x0\n    const dy = y1 - y0\n    const dz = z1 - z0\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz)\n}\n\nfunction getStats(diffs)\n{\n\n    let median\n    const len = diffs.length\n    let half = len >> 1\n    if ((len & 1) === 0)\n    {\n        median = diffs[half].diff\n    }\n    else\n    {\n        median = (diffs[half].diff + diffs[half + 1].diff)/2\n    }\n\n    console.log(\"DIFFS\", diffs)\n    console.log(\"Median Height difference\", median)\n    console.log(\"Average Height difference\", diffs.reduce((a,b) => a + b.diff, 0) / diffs.length)\n\n}\n\nfunction getEdgesByHeightDifference(faces)\n{\n    const edgesCounted = new Set()\n\n    const differences = []\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i]\n\n        const first = face.halfEdge;\n        let curr = first;\n        do\n        {\n            let edge = curr.edge\n            if (!edgesCounted.has(edge) && curr.twin)\n            {\n                edgesCounted.add(edge)\n\n                const y0 = face.center[2]\n                const y1 = curr.twin.face.center[2]\n\n                const diff = Math.abs(y0-y1)\n                differences.push({diff, edge})\n            }\n\n            curr = curr.next\n\n        } while (curr !== first)\n    }\n\n    differences.sort((a,b) => a.diff - b.diff)\n\n    return differences\n}\n\n\nexport class Terrain {\n    /**\n     * @type {Scene}\n     */\n    scene = null\n\n    /**\n     *\n     * @type {HexagonPatch}\n     */\n    patch = null\n\n    world = null\n\n    /**\n     *\n     * @type {Array.<Face>}\n     */\n    faces = null\n\n\n    constructor(scene, world, patch)\n    {\n        this.scene = scene\n        this.world = world\n        this.patch = patch\n        this.faces = this.patch.build()\n\n        initializeFaces(world, this.faces)\n    }\n\n\n    createGeometries(msTiles)\n    {\n        const MARK_FACES = false\n\n        const patchX = 0\n        const patchY = 0\n\n        const { world } = this\n\n        const geoms = TerrainTypes.map( tt => new GeomPerMat(world,tt))\n\n        const lines = []\n        const faces = this.faces\n\n\n\n        for (let i = 0; i < faces.length; i++)\n        {\n            const face = faces[i]\n            const first = face.halfEdge\n            const { biome: biome3 } = first.vertex\n            const { biome: biome2 } = first.next.vertex\n            const { biome: biome1 } = first.next.next.vertex\n            const { biome: biome0 } = first.next.next.next.vertex\n\n\n            const localBiomes = new Set([\n                biome0,\n                biome1,\n                biome2,\n                biome3\n            ])\n\n            const multiMode = localBiomes.size > 2\n\n            if (localBiomes.size === 1)\n            {\n                // easiest case. We only have one biome, case-15 with that biome, done\n                this.insert(msTiles[\"case-15\"], face, geoms[biome0])\n            }\n            else\n            {\n                for (let terrain of localBiomes)\n                {\n                    const tileName = tileNameLookup[\n                        ((terrain === biome0) + (terrain === biome1) * 2 + (terrain === biome2) * 4 + (terrain === biome3) * 8) +\n                        multiMode * 16\n                        ]\n\n                    if (tileName)\n                    {\n                        this.insert(msTiles[tileName], face, geoms[terrain])\n                    }\n                }\n            }\n\n            const { vertex: vertex0 } = first\n            const { vertex: vertex1 } = first.next\n            const { vertex: vertex2 } = first.next.next\n            const { vertex: vertex3 } = first.next.next.next\n\n\n            if (MARK_FACES)\n            {\n                lines.push(\n                    new Vector3(vertex0.x, vertex0.z, vertex0.y),\n                    new Vector3(vertex1.x, vertex1.z, vertex1.y)\n                )\n                lines.push(\n                    new Vector3(vertex1.x, vertex1.z, vertex1.y),\n                    new Vector3(vertex2.x, vertex2.z, vertex2.y)\n                )\n                lines.push(\n                    new Vector3(vertex2.x, vertex2.z, vertex2.y),\n                    new Vector3(vertex3.x, vertex3.z, vertex3.y)\n                )\n                lines.push(\n                    new Vector3(vertex3.x, vertex3.z, vertex3.y),\n                    new Vector3(vertex0.x, vertex0.z, vertex0.y)\n                )\n\n                lines.push(\n                    new Vector3(vertex0.x, vertex0.z, vertex0.y),\n                    new Vector3(\n                        (vertex0.x * 4 + vertex1.x + vertex2.x + vertex3.x)/7,\n                        (vertex0.z * 4 + vertex1.z + vertex2.z + vertex3.z)/7,\n                        (vertex0.y * 4 + vertex1.y + vertex2.y + vertex3.y)/7,\n                    ),\n                )\n            }\n\n        }\n\n        let diff = getEdgesByHeightDifference(faces)\n        getStats(diff)\n\n        diff.filter(e => e.diff > 15).forEach(\n            ({edge}) => {\n\n                const vertex0 = edge.halfEdge.vertex\n                const vertex1 = edge.halfEdge.next.vertex\n\n                lines.push(\n                    new Vector3(vertex0.x, vertex0.z, vertex0.y),\n                    new Vector3(vertex1.x, vertex1.z, vertex1.y)\n                )\n            }\n        )\n\n        return [geoms, lines]\n    }\n\n\n    insert(tile, face, geom)\n    {\n        //console.log(\"INSERT\", tile, face, biome)\n\n        if (tile.type !== \"Mesh\")\n        {\n            throw new Error(\"Expecting only meshes, is: \" + geometry.type)\n        }\n\n        const { world } = this\n        const { geometry } = tile\n\n        const first = face.halfEdge\n        const { vertex: vertex0 } = first\n        const { vertex: vertex1 } = first.next\n        const { vertex: vertex2 } = first.next.next\n        const { vertex: vertex3 } = first.next.next.next\n\n\n        const verticesIn = geometry.attributes.position.array\n        const normalsIn = geometry.attributes.normal.array\n        const indexIn = geometry.index.array\n\n        const tri = geom.triFn()\n\n        // hexagon patch vertices are z-up, so we swap\n        const { x: x0, y: z0, z: y0} = vertex0\n        const { x: x1, y: z1, z: y1} = vertex1\n        const { x: x2, y: z2, z: y2} = vertex2\n        const { x: x3, y: z3, z: y3} = vertex3\n\n        for (let i = 0; i < verticesIn.length; i += 3)\n        {\n            let xIn = verticesIn[i    ]\n            let yIn = -verticesIn[i + 1]\n            let zIn = verticesIn[i + 2]\n\n            let x = xIn + 0.5\n            const y = yIn\n            let z = zIn + 0.5\n\n            const scale = (getDistance(x0,y0,z0,x2,y2,z2))/ Math.sqrt(2)\n\n            let rx2, ry2, rz2\n            let localUp;\n            {\n                const rx0 = x0 + (x1 - x0 ) * x\n                const ry0 = y0 + (y1 - y0 ) * x\n                const rz0 = z0 + (z1 - z0 ) * x\n\n                const rx1 = x3 + (x2 - x3 ) * x\n                const ry1 = y3 + (y2 - y3 ) * x\n                const rz1 = z3 + (z2 - z3 ) * x\n\n                rx2 = rx0 + (rx1 - rx0 ) * z\n                ry2 = ry0 + (ry1 - ry0 ) * z\n                rz2 = rz0 + (rz1 - rz0 ) * z\n\n                localUp = calculateNormalFromHeightMap(world, rx2, rz2)\n\n                //console.log(\"LOCAL UP\", localUp)\n\n                rx2 += localUp[0] * y * scale\n                ry2 += localUp[1] * y * scale\n                rz2 += localUp[2] * y * scale\n\n                geom.addVertices(rx2, ry2, rz2)\n            }\n\n\n            {\n                const nx = x + normalsIn[i    ]\n                const ny = y - normalsIn[i + 1]\n                const nz = z + normalsIn[i + 2]\n\n                const rx0 = x0 + (x1 - x0 ) * nx\n                const ry0 = y0 + (y1 - y0 ) * nx\n                const rz0 = z0 + (z1 - z0 ) * nx\n\n                const rx1 = x3 + (x2 - x3 ) * nx\n                const ry1 = y3 + (y2 - y3 ) * nx\n                const rz1 = z3 + (z2 - z3 ) * nx\n\n                let rnx = rx0 + (rx1 - rx0 ) * nz\n                let rny = ry0 + (ry1 - ry0 ) * nz\n                let rnz = rz0 + (rz1 - rz0 ) * nz\n\n                rnx += localUp[0] * ny * scale\n                rny += localUp[1] * ny * scale\n                rnz += localUp[2] * ny * scale\n\n                geom.addNormal(rnx - rx2, rny - ry2, rnz - rz2)\n            }\n        }\n\n        for (let i = 0; i < indexIn.length; i+=3)\n        {\n            const a = indexIn[i]\n            const b = indexIn[i+1]\n            const c = indexIn[i+2]\n\n            tri(a,b,c)\n        }\n    }\n}\n\nexport const TerrainTypes = [\n    {\n        \"name\": \"SEA\",\n        material : {\n            roughness: 0.1,\n            color : \"#002888\",\n        }\n    },\n    {\n        \"name\": \"DEEP_SEA\",\n        material : {\n            roughness: 0.2,\n            color : \"#060f69\",\n        }\n    },\n    {\n        \"name\": \"GRASS\",\n        material : {\n            roughness: 0.96,\n            color: \"#284\",\n        }\n    },\n    {\n        \"name\": \"WATER\",\n        material : {\n            roughness: 0.05,\n            color: \"#004290\",\n        }\n    },\n    {\n        \"name\": \"TALL_GRASS\",\n        material : {\n            roughness: 0.98,\n            color: \"#4b8822\",\n        }\n    },\n    {\n        \"name\": \"REEDS\",\n        material : {\n            roughness: 0.98,\n            color: \"#7e8822\",\n        }\n    },\n    {\n        \"name\": \"WOODS\",\n        material : {\n            roughness: 0.94,\n            color: \"#1c6b37\",\n        }\n    },\n    {\n        \"name\": \"DARK_WOODS\",\n        material : {\n            roughness: 0.94,\n            color: \"#103b29\",\n        }\n    },\n    {\n        \"name\": \"DIRT\",\n        material : {\n            roughness: 0.99,\n            color: \"#4d2605\",\n        }\n    },\n    {\n        \"name\": \"MUD\",\n        material : {\n            roughness: 0.7,\n            color: \"#38261e\",\n        }\n    },\n    {\n\n        \"name\": \"SAND\",\n        material : {\n            roughness: 0.99,\n            color : \"#afaa41\",\n        }\n    },\n    {\n        \"name\": \"ICE\",\n        material : {\n            roughness: 0.4,\n            color : \"#bbbbff\",\n        }\n    },\n    {\n        \"name\": \"SNOW\",\n        material : {\n            roughness: 0.4,\n            color : \"#bbbbff\",\n        }\n    },\n    {\n        \"name\": \"ROCK\",\n        material : {\n            roughness: 0.7,\n            color : \"#777\",\n        }\n    },\n    {\n        \"name\": \"RAINFOREST\",\n        material : {\n            roughness: 0.95,\n            color: \"#049439\",\n        }\n    },\n    {\n        \"name\": \"RAINFOREST_2\",\n        material : {\n            roughness: 0.96,\n            color: \"#056442\",\n        }\n    },\n    {\n        \"name\": \"STEPPE\",\n        material : {\n            roughness: 0.96,\n            color : \"#93a167\",\n        }\n    },\n]\n\n// console.log(TerrainTypes.map((t,i) => \"Terrain.\" + t.name + \" = \" + i).join(\"\\n\"))\n\nTerrain.SEA = 0\nTerrain.DEEP_SEA = 1\nTerrain.GRASS = 2\nTerrain.WATER = 3\nTerrain.TALL_GRASS = 4\nTerrain.REEDS = 5\nTerrain.WOODS = 6\nTerrain.DARK_WOODS = 7\nTerrain.DIRT = 8\nTerrain.MUD = 9\nTerrain.SAND = 10\nTerrain.ICE = 11\nTerrain.SNOW = 12\nTerrain.ROCK = 13\nTerrain.RAINFOREST = 14\nTerrain.RAINFOREST_2 = 15\nTerrain.STEPPE = 16\n","import domready from \"domready\"\nimport \"./style.css\"\nimport World, { MAX_LATITUDE } from \"./World\"\nimport { TerrainTypes } from \"./terrain\"\nimport Color from \"./Color\"\n\nconst PHI = (1 + Math.sqrt(5)) / 2;\nconst TAU = Math.PI * 2;\nconst DEG2RAD_FACTOR = TAU / 360;\n\nconst config = {\n    width: 0,\n    height: 0\n};\n\n/**\n * @type CanvasRenderingContext2D\n */\nlet ctx;\nlet canvas;\n\nconst pink = Color.from(\"#f0f\")\n\ndomready(\n    () => {\n\n        canvas = document.createElement(\"canvas\");\n        document.getElementById(\"root\").appendChild(canvas)\n        ctx = canvas.getContext(\"2d\");\n\n        const width = (window.innerWidth * 0.9) | 0;\n        const height = width >> 1\n\n        config.width = width;\n        config.height = height;\n\n        canvas.width = width;\n        canvas.height = height;\n\n        const world = new World(1412)\n\n        const paint = () => {\n\n            ctx.fillStyle = \"#000\";\n            ctx.fillRect(0,0, width, height);\n\n            let imageData = ctx.getImageData(0,0,width, height)\n            const { data } = imageData\n            let off = 0\n\n            const cx = width >> 1\n            const cy = height >> 1\n\n            const h = MAX_LATITUDE * 2\n            const f = h / height\n            for (let y = 0; y < height; y++)\n            {\n                for (let x = 0; x < width; x++)\n                {\n                    const x0 = x - cx\n                    const y0 = y - cy\n\n                   const biome = world.getBiome(x0 * f, y0 * f);\n\n                   const color = biome !== undefined ?  Color.from(TerrainTypes[biome].material.color) : pink\n                    data[off ] = color.r\n                    data[off + 1 ] = color.g\n                    data[off + 2 ] = color.b\n                    off += 4;\n                }\n            }\n\n            ctx.putImageData(imageData,0 ,0)\n        }\n\n        paint()\n\n        canvas.addEventListener(\"click\", paint, true)\n    }\n);\n","export function clamp(v)\n{\n    return v < 0 ? 0 : v > 1 ? 1 : v;\n}\n\nexport function resolve(names, values)\n{\n    const indexes = []\nouter:\n    for (let i = 0; i < names.length; i++)\n    {\n        const name = names[i]\n        for (let j = 0; j < values.length; j++)\n        {\n            const value = values[j]\n            if (value.name === name)\n            {\n                indexes.push(j)\n                continue outer;\n            }\n        }\n        throw new Error(\"Could not find element with name \" + name);\n    }\n    return indexes;\n}\n\n\nexport function forEachHalfEdge(face, fn)\n{\n    const first = face.halfEdge;\n    let curr = first;\n    do\n    {\n        fn(curr)\n        curr = curr.next\n    }  while (curr !== first)\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"test\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkDemo\"] = self[\"webpackChunkDemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors\"], function() { return __webpack_require__(\"./src/test.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["AABB","minX","Infinity","minY","maxX","maxY","add","x","y","Math","min","max","w","h","center","grow","n","shrink","dir","amount","Error","LUM_THRESHOLD","PERCEPTIVE_FACTOR_RED","PERCEPTIVE_FACTOR_GREEN","PERCEPTIVE_FACTOR_BLUE","TO_LINEAR_POWER","TO_RGB_POWER","gun_luminance","v","pow","colorRegExp","hex","s","toString","length","hue2rgb","p","q","t","getLuminance","color","r","g","b","Color","constructor","mix","other","ratio","out","r0","g0","b0","r1","g1","b1","sqrt","multiply","scale","set","toRGBHex","toRGBA","alpha","toHex","validate","m","exec","col","parseInt","substring","from","factor","Array","isArray","array","Float32Array","f","off","i","fromHSL","l","round","Prando","SimplexNoise","Terrain","TerrainTypes","resolve","env","TAU","shuffle","RTree","hash","Biomes","map","name","filter","createBiomes","prando","biomes","next","getRandomValues","count","push","MAX_HEIGHT","MAX_LATITUDE","norm","rnd","slices","sum","weight","terrain","sliceWeight","j","e","World","seed","noise","rTree","nh","bo","biomeLookup","biomeMask","TROPIC","MODERATE","console","log","nextInt","RAINFOREST","RAINFOREST_2","TALL_GRASS","GRASS","MUD","SAND","DARK_WOODS","DIRT","WOODS","calculateHeight","z","offset","ox0","oy0","ox1","oy1","ox2","oy2","ns0","ns1","ns2","noise3D","getBiome","tempNs","moistNs","tempNx","tempNy","moistNx","moistNy","flavorNx","flavorNy","tempNz","moistNz","flavorNz","tempMalus","cos","moistureBonus","temperature","moisture","flavor","DEEP_SEA","SEA","ICE","STEPPE","area","value","last","limit","SCALE","PI","Env","world","init","a","floor","BufferGeometry","Float32BufferAttribute","Vector3","forEachHalfEdge","distance","calculateNormalFromHeightMap","x0","z0","x1","z1","x2","z2","y0","y1","y2","calculateNormal","ax","ay","az","bx","by","bz","nx","ny","nz","initFace","face","patchX","patchY","first","halfEdge","curr","aabb","vertex","insert","getArea","initializeFaces","faces","forEach","he","biome","GeomPerMat","indices","vertices","normals","triFn","vOff","c","addVertices","addNormal","getVertex","idx","createThreeGeometry","geometry","setIndex","setAttribute","tileNameLookup","getDistance","dx","dy","dz","getStats","diffs","median","len","half","diff","reduce","getEdgesByHeightDifference","edgesCounted","Set","differences","edge","has","twin","abs","sort","scene","patch","build","createGeometries","msTiles","MARK_FACES","geoms","tt","lines","biome3","biome2","biome1","biome0","localBiomes","multiMode","size","tileName","vertex0","vertex1","vertex2","vertex3","tile","geom","type","verticesIn","attributes","position","normalsIn","normal","indexIn","index","tri","x3","z3","y3","xIn","yIn","zIn","rx2","ry2","rz2","localUp","rx0","ry0","rz0","rx1","ry1","rz1","rnx","rny","rnz","material","roughness","WATER","REEDS","SNOW","ROCK","domready","PHI","DEG2RAD_FACTOR","config","width","height","ctx","canvas","pink","document","createElement","getElementById","appendChild","getContext","window","innerWidth","paint","fillStyle","fillRect","imageData","getImageData","data","cx","cy","undefined","putImageData","addEventListener","clamp","names","values","indexes","outer","fn"],"sourceRoot":""}