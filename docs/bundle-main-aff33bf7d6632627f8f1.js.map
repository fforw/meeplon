{"version":3,"file":"bundle-main-aff33bf7d6632627f8f1.js","mappings":"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CAAF;IACAA,IAAI,GAAGA,IAAI,CAACG,IAAZ;EACH,CAJD,QAIUH,IAAI,KAAKF,KAJnB;AAKH;;;;;;;;;;;ACpCD;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC,oHAAoH,iDAAiD;WACrK;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA,8CAA8C;;WAE9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,iCAAiC,mCAAmC;WACpE;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UElDA;UACA;UACA;UACA,qFAAqF,+CAA+C;UACpI","sources":["webpack://Demo/./src/AABB.js","webpack://Demo/./src/HexagonPatch.js","webpack://Demo/./src/World.js","webpack://Demo/./src/env.js","webpack://Demo/./src/geometry.js","webpack://Demo/./src/index.js","webpack://Demo/./src/loadModel.js","webpack://Demo/./src/shuffle.js","webpack://Demo/./src/terrain.js","webpack://Demo/./src/util.js","webpack://Demo/./src/style.css","webpack://Demo/webpack/bootstrap","webpack://Demo/webpack/runtime/chunk loaded","webpack://Demo/webpack/runtime/compat get default export","webpack://Demo/webpack/runtime/define property getters","webpack://Demo/webpack/runtime/hasOwnProperty shorthand","webpack://Demo/webpack/runtime/make namespace object","webpack://Demo/webpack/runtime/jsonp chunk loading","webpack://Demo/webpack/before-startup","webpack://Demo/webpack/startup","webpack://Demo/webpack/after-startup"],"sourcesContent":["export default class AABB {\n\n    minX = Infinity;\n    minY = Infinity;\n    maxX = -Infinity;\n    maxY = -Infinity;\n\n    add(x, y)\n    {\n        this.minX = Math.min(this.minX, x);\n        this.minY = Math.min(this.minY, y);\n        this.maxX = Math.max(this.maxX, x);\n        this.maxY = Math.max(this.maxY, y);\n    }\n\n    get x()\n    {\n        return 0|this.minX\n    }\n\n    get y()\n    {\n        return 0|this.minY\n    }\n\n    get w()\n    {\n        return (this.maxX - this.minX) | 0;\n    }\n\n\n    get h()\n    {\n        return (this.maxY - this.minY) | 0;\n    }\n\n    get center()\n    {\n        return [(this.minX + this.maxX)/2, (this.minY + this.maxY)/2 ]\n    }\n\n    grow(n)\n    {\n        this.minX -= n;\n        this.minY -= n;\n        this.maxY += n;\n        this.maxY += n;\n    }\n\n    shrink(dir, amount)\n    {\n        switch(dir)\n        {\n            case 0:\n                this.minX += amount\n                this.minY += amount\n                break;\n            case 1:\n                this.maxX -= amount\n                this.minY += amount\n                break;\n            case 2:\n                this.maxX -= amount\n                this.maxY -= amount\n                break;\n            case 3:\n                this.minX += amount\n                this.maxY -= amount\n                break;\n            default:\n                throw new Error(\"Invalid direction: \" + dir)\n        }\n    }\n}\n","import { Edge, Face, FaceGroup, HalfEdge, Vertex } from \"./geometry\"\nimport env from \"./env\";\nimport shuffle from \"./shuffle\"\n\nfunction findInsideEdges(faces)\n{\n    const edges = new Set()\n\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i];\n\n        const first = face.halfEdge;\n        let curr = first;\n        do\n        {\n            if (curr.twin)\n            {\n                edges.add(curr.edge)\n            }\n\n            curr = curr.next\n\n        } while (curr !== first)\n    }\n\n    return edges;\n}\n\nfunction getEdges(faces)\n{\n    const edges = new Set()\n\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i];\n\n        const first = face.halfEdge;\n        let curr = first;\n        do\n        {\n            if (!curr.edge)\n            {\n                throw new Error(\"No edge set\")\n            }\n\n            edges.add(curr.edge)\n            curr = curr.next\n\n        } while (curr !== first)\n    }\n\n    return edges;\n}\n\n\n\n\n\nexport function findFaceIndex(faces, other)\n{\n    if (!other)\n    {\n        throw new Error(\"Need face\")\n    }\n\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i];\n        if (face === other)\n        {\n            return i\n        }\n    }\n    return -1;\n}\n\n\nfunction resetFacesInLoop(prev, face)\n{\n    let curr = prev;\n    do\n    {\n        curr.face = face\n        curr = curr.next\n    } while (curr !== prev)\n}\n\n\nexport function removeEdge(faces, edge, onlyFromTris = true)\n{\n    if (!edge || !edge.halfEdge || !edge.halfEdge.twin)\n    {\n        throw new Error(\"Need half edge and twin\")\n    }\n\n    const he = edge.halfEdge;\n    const face = he.face\n    const other = he.twin.face\n    if (onlyFromTris && (face.length !== 3 || other.length !== 3))\n    {\n        return;\n    }\n\n    const index = findFaceIndex(faces, other)\n    if (index < 0)\n    {\n        throw new Error(\"Did not find twin face in faces array\")\n    }\n    faces.splice(index, 1)\n\n    const prev = he.prev\n    const twinPrev = he.twin.prev\n\n    prev.next = he.twin.next\n    twinPrev.next = he.next\n    resetFacesInLoop(prev, face);\n\n    if (face.halfEdge === he)\n    {\n        face.halfEdge = prev\n    }\n}\n\n\nfunction subdivideEdge(he)\n{\n    const { twin } = he\n\n    const vertex = new Vertex(\n        (he.vertex.x + he.next.vertex.x) / 2,\n        (he.vertex.y + he.next.vertex.y) / 2,\n        (he.vertex.z + he.next.vertex.z) / 2,\n        null\n    )\n\n    const edge = new Edge(null)\n    const newEdge = new HalfEdge(he.next, vertex, edge, he.face);\n    he.next = newEdge\n    if (twin)\n    {\n        twin.next = new HalfEdge(twin.next, vertex, edge, he.face)\n\n        he.twinWith(twin.next)\n        twin.twinWith(newEdge)\n    }\n\n    return newEdge\n}\n\n\nfunction divideTriIntoQuads(faces, face)\n{\n    let ha = face.halfEdge\n    let hab = face.halfEdge.next\n    let hb = face.halfEdge.next.next\n    let hbc = face.halfEdge.next.next.next\n    let hc = face.halfEdge.next.next.next.next\n    let hca = face.halfEdge.next.next.next.next.next\n\n\n    const vertex = new Vertex(\n        (ha.vertex.x + hb.vertex.x + hc.vertex.x) / 3,\n        (ha.vertex.y + hb.vertex.y + hc.vertex.y) / 3,\n        (ha.vertex.z + hb.vertex.z + hc.vertex.z) / 3,\n        null\n    )\n\n    const fa = new Face(null);\n    const fb = new Face(null);\n    const fc = new Face(null);\n\n\n    const hvca = new HalfEdge(hca, vertex, new Edge(null), fa);\n    const hvab = new HalfEdge(hab, vertex, new Edge(null), fb);\n    const hvbc = new HalfEdge(hbc, vertex, new Edge(null), fc);\n\n    const habv = new HalfEdge(hvca, hab.vertex, hvca.edge, fa);\n    const hbcv = new HalfEdge(hvab, hbc.vertex, hvab.edge, fb);\n    const hcav = new HalfEdge(hvbc, hca.vertex, hvbc.edge, fc);\n\n    hvab.twinWith(habv)\n    hvbc.twinWith(hbcv)\n    hvca.twinWith(hcav)\n\n    hca.face = fa\n    hab.face = fb\n    hbc.face = fc\n\n    ha.next = habv;\n    hb.next = hbcv;\n    hc.next = hcav;\n\n    resetFacesInLoop(ha, fa);\n    resetFacesInLoop(hb, fb);\n    resetFacesInLoop(hc, fc);\n\n    //fa.halfEdge = fa.halfEdge.next.next\n    //fb.halfEdge = fb.halfEdge.next.next.next\n\n    const group = new FaceGroup(3)\n    fa.group = group\n    fb.group = group\n    fc.group = group\n\n    faces.push(fa,fb,fc)\n\n}\n\n\nfunction subdivideQuad(faces, face)\n{\n\n    let ha = face.halfEdge\n    let hab = ha.next\n    let hb = hab.next\n    let hbc = hb.next\n    let hc = hbc.next\n    let hcd = hc.next\n    let hd = hcd.next\n    let hda = hd.next\n\n\n    const vertex = new Vertex(\n        (ha.vertex.x + hb.vertex.x + hc.vertex.x + hd.vertex.x) / 4,\n        (ha.vertex.y + hb.vertex.y + hc.vertex.y + hd.vertex.y) / 4,\n        (ha.vertex.z + hb.vertex.z + hc.vertex.z + hd.vertex.z) / 4,\n        null\n    )\n\n    const fa = new Face(null);\n    const fb = new Face(null);\n    const fc = new Face(null);\n    const fd = new Face(null);\n\n\n    const hvab = new HalfEdge(hab, vertex, new Edge(null), fb);\n    const hvbc = new HalfEdge(hbc, vertex, new Edge(null), fc);\n    const hvcd = new HalfEdge(hcd, vertex, new Edge(null), fd);\n    const hvda = new HalfEdge(hda, vertex, new Edge(null), fa);\n\n    const habv = new HalfEdge(hvda, hab.vertex, hvcd.edge, fa);\n    const hbcv = new HalfEdge(hvab, hbc.vertex, hvab.edge, fb);\n    const hcdv = new HalfEdge(hvbc, hcd.vertex, hvbc.edge, fc);\n    const hdav = new HalfEdge(hvcd, hda.vertex, hvda.edge, fd);\n\n    hvab.twinWith(habv)\n    hvbc.twinWith(hbcv)\n    hvcd.twinWith(hcdv)\n    hvda.twinWith(hdav)\n\n    ha.next = habv;\n    hb.next = hbcv;\n    hc.next = hcdv;\n    hd.next = hdav;\n\n    resetFacesInLoop(ha, fa);\n    resetFacesInLoop(hb, fb);\n    resetFacesInLoop(hc, fc);\n    resetFacesInLoop(hd, fd);\n\n    faces.push(fa,fb,fc,fd)\n\n    const group = new FaceGroup(4)\n    fa.group = group\n    fb.group = group\n    fc.group = group\n    fd.group = group\n}\n\n\n\nfunction divideIntoQuads(faces)\n{\n\n    getEdges(faces).forEach(e => subdivideEdge(e.halfEdge))\n\n    const newFaces = [];\n\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i];\n\n        const { length } = face;\n\n        if ( length === 6 )\n        {\n            divideTriIntoQuads(newFaces, face)\n        }\n        else if ( length === 8 )\n        {\n            subdivideQuad(newFaces, face)\n        }\n        else\n        {\n            throw new Error(\"Not tri or quad: \" + length)\n        }\n    }\n\n    return newFaces\n}\n\n\n\nfunction validateFace(face)\n{\n    const { halfEdge } = face\n    if (!halfEdge)\n    {\n        throw new Error(\"No half edge: \" + face)\n    }\n    const set = new Set();\n\n    let curr = halfEdge;\n    do\n    {\n        if (set.has(curr))\n        {\n            throw new Error(\"Duplicate on iteration: \" + curr)\n        }\n\n        set.add(curr)\n\n        const next = curr.next;\n        if (!next)\n        {\n            throw new Error(\"Next not set: \" + face)\n        }\n        curr = next\n    } while (curr !== halfEdge)\n\n}\n\nfunction setToAverage(v)\n{\n    const { halfEdge : start } = v;\n\n    if (!start)\n    {\n        return;\n    }\n\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let count = 0;\n\n    let curr = start;\n    let twin\n    let max = 20;\n    do\n    {\n        x += curr.next.vertex.x\n        y += curr.next.vertex.y\n        z += curr.next.vertex.z\n        count++\n\n        twin = curr.twin;\n        if (twin)\n        {\n            curr = twin.next\n        }\n\n    } while(twin && curr !== start && max-- > 0)\n\n\n    // if (!twin)\n    // {\n    //     const prev = start.prev;\n    //     let curr = prev;\n    //     max = 10\n    //     do\n    //     {\n    //         x += curr.next.vertex.x\n    //         y += curr.next.vertex.y\n    //         count++\n    //\n    //         twin = curr.twin;\n    //         if (twin)\n    //         {\n    //             curr = twin.prev\n    //         }\n    //\n    //     } while(twin && curr !== prev && max-- > 0)\n    // }\n\n    if (twin)\n    {\n        v.x = x/count\n        v.y = y/count\n        v.z = z/count\n\n    }\n}\n\nfunction relax(faces)\n{\n    const set = new Set()\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i];\n        let curr = face.halfEdge\n        do\n        {\n            set.add(curr.vertex)\n            curr = curr.next\n        } while (curr !== face.halfEdge)\n    }\n\n    const verts = [... set]\n\n    const relaxCount = 25\n    for (let i=0; i < relaxCount; i++)\n    {\n        for (let j=0; j < verts.length; j++)\n        {\n            const v = verts[j]\n\n            setToAverage(v)\n        }\n    }\n\n\n    console.log(faces.length, \", verts =\", set.size)\n\n}\n\n\nfunction pDistance(x, y, x1, y1, x2, y2) {\n\n    var A = x - x1;\n    var B = y - y1;\n    var C = x2 - x1;\n    var D = y2 - y1;\n\n    var dot = A * C + B * D;\n    var len_sq = C * C + D * D;\n    var param = -1;\n    if (len_sq != 0) //in case of 0 length line\n        param = dot / len_sq;\n\n    var xx, yy;\n\n    if (param < 0) {\n        xx = x1;\n        yy = y1;\n    }\n    else if (param > 1) {\n        xx = x2;\n        yy = y2;\n    }\n    else {\n        xx = x1 + param * C;\n        yy = y1 + param * D;\n    }\n\n    var dx = x - xx;\n    var dy = y - yy;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\n\nfunction getMinimumDistanceToPoint(face, x0, y0)\n{\n    let min = Infinity\n    let curr = face.halfEdge;\n    do\n    {\n        const dist = pDistance(\n            x0, y0,\n            curr.vertex.x, curr.vertex.y,\n            curr.next.vertex.x, curr.next.vertex.y,\n        );\n\n        if (dist < min)\n        {\n            min = dist\n        }\n        curr = curr.next\n    } while (curr !== face.halfEdge)\n\n    return min;\n}\n\nfunction quickFix(faces)\n{\n    // XXX: we still have odd double points and this removes them until I find out my\n\n    const map = new Map()\n\n    const key = vertex => Math.round(vertex.x) + \":\" + Math.round(vertex.y)\n\n    let count = 0;\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i];\n        const first = face.halfEdge;\n        let curr = first;\n        do\n        {\n            const { vertex } = curr;\n            const k = key(vertex);\n            const existing = map.get(k);\n            if (existing)\n            {\n                count++;\n                curr.vertex = existing\n                curr.vertex.halfEdge = curr\n            }\n            else\n            {\n\n                map.set(k, vertex)\n            }\n\n            curr = curr.next\n        }  while (curr !== first)\n\n    }\n\n    console.log(\"Quick-fixed #\" + count + \" vertices\")\n\n}\n\nfunction pixelatePositions(faces)\n{\n    // XXX: we still have odd double points and this removes them until I find out my\n\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i];\n        const first = face.halfEdge;\n        let curr = first;\n        do\n        {\n            const { vertex } = curr;\n\n            vertex.x |= 0\n            vertex.y |= 0\n            vertex.z |= 0\n\n            curr = curr.next\n        }  while (curr !== first)\n\n    }\n}\n\nfunction getSetOfIds(faces)\n{\n    const ids = new Set()\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i];\n        ids.add(face.id)\n    }\n    return ids;\n}\n\n\nfunction validateFaces(faces)\n{\n    const ids = getSetOfIds(faces);\n\n    for (let i = 0; i < faces.length; i++)\n    {\n\n        const face = faces[i];\n        const first = face.halfEdge;\n        let curr = first;\n        do\n        {\n            const id = curr.face.id;\n            if (!ids.has(id))\n            {\n                console.warn(\"Coming from Face #\" + face.id + \": Face id #\" + id + \" of node #\" + curr.id + \" is not in the faces array\")\n            }\n\n            curr = curr.next\n        } while (curr !== first)\n\n    }\n}\n\nfunction fixEdges(faces)\n{\n    const ids = getSetOfIds(faces);\n\n    let connectedCount = 0\n    let notConnectedCount = 0\n    for (let i = 0; i < faces.length; i++)\n    {\n\n        const face = faces[i];\n        const start = face.halfEdge;\n        let curr = start;\n        do\n        {\n            const { twin } = curr\n            if (twin)\n            {\n                if (curr.edge !== twin.edge)\n                {\n                    console.log(\"Edge mismatch\")\n                }\n\n                const { edge } = curr\n\n                if (edge.halfEdge !== curr && edge.halfEdge !== twin)\n                {\n                    // fix edge pointer\n                    edge.halfEdge = curr\n                    notConnectedCount++\n                }\n                else\n                {\n                    connectedCount++\n                }\n            }\n\n\n            curr = curr.next\n        } while (curr !== start)\n    }\n\n    //console.log({connectedCount, notConnectedCount})\n}\n\n/////////////////////////////////////////\n\n\n\nconst TAU = Math.PI * 2;\nconst sin60 = Math.sin(TAU / 6);\n\nconst hFactor = Math.sqrt(3);\n\nconst directions = [\n    new Vertex(0,0, null),\n    new Vertex(0,-1, null),\n    new Vertex(sin60, -0.5, 0, null),\n    new Vertex(sin60,  0.5, 0, null),\n    new Vertex(0,1, null),\n    new Vertex(-sin60, 0.5, 0, null),\n    new Vertex(-sin60,  -0.5, 0, null),\n]\n\nconst evenNeighbors = [\n    [0,-1],\n    [1,0],\n    [0,1],\n    [-1,1],\n    [-1,0],\n    [-1,-1]\n]\n\nconst oddNeighbors = [\n    [1,-1],\n    [1,0],\n    [1,1],\n    [0,1],\n    [-1,0],\n    [0,-1]\n]\n\n\n\nexport function createHexagon(q, r, faces, points, patch)\n{\n    const start = faces.length;\n    patch.setHexagon(q,r, start)\n\n    const w = hFactor * patch.size\n    const hw = w * 0.5\n    const h = patch.size * 2\n\n    const offX = w * q + ((r & 1) !== 0 ? hw : 0)\n    const offY = h * 0.75 * r\n\n\n    const verts = directions.map(d => new Vertex(\n        d.x * patch.size + offX,\n        d.y * patch.size + offY,\n        0,\n        null,\n    ).round());\n\n    const v3 = verts[0];\n\n    let prevFace\n    let firstFace;\n    const last = verts.length - 1;\n    for (let i = 1; i < verts.length; i++)\n    {\n        const v = verts[i];\n        const v2 = verts[i === last ? 1 : i + 1];\n\n        const face = new Face(null);\n\n        if (i === 1)\n        {\n            firstFace = face\n        }\n\n        const he0 = new HalfEdge(null, v, null, face)\n        const he1 = new HalfEdge(null, v2, null, face)\n        const he2 = new HalfEdge(null, v3, null, face)\n\n        he0.next = he1\n        he1.next = he2\n        he2.next = he0\n\n        he0.edge = new Edge(he0)\n        he1.edge = i === last ? firstFace.halfEdge.next.next.edge : new Edge(he1)\n        he2.edge = prevFace ? prevFace.halfEdge.next.edge : new Edge(he2)\n\n        face.halfEdge = he0\n        faces.push(\n            face\n        )\n\n        if (prevFace)\n        {\n            prevFace.halfEdge.next.twinWith(face.halfEdge.next.next)\n        }\n\n        prevFace = face\n    }\n\n    const face = faces[start]\n\n    prevFace.halfEdge.next.twinWith(face.halfEdge.next.next)\n\n    points.push(... verts)\n\n    const neighbors = (r & 1) ? oddNeighbors : evenNeighbors\n\n    // connect hexagon to preexisting hexagons\n    for (let i = 0; i < neighbors.length; i++)\n    {\n        const [qOff, rOff] = neighbors[i];\n\n        const faceIndex = patch.getHexagon(q + qOff,r + rOff)\n        if (faceIndex !== undefined)\n        {\n            const he0 = faces[start + i].halfEdge\n            const he1 = faces[faceIndex + ((i + 3) % 6)].halfEdge\n\n            he1.twinWith(he0)\n        }\n    }\n}\n\n\n\n/////////////////////////////////////////\n\nfunction key(q, r)\n{\n    return q + \"/\" + r\n}\n\n\nexport const PATCH_SIZE = 24;\nconst hSize = PATCH_SIZE/2;\n\nexport default class HexagonPatch\n{\n    q = 0\n    r = 0\n\n    static SIZE = PATCH_SIZE\n\n    hexagons = new Map()\n\n    constructor(q,r, size = 30)\n    {\n        this.q = q\n        this.r = r\n        this.size = size\n\n\n    }\n\n\n    /**\n     * Returns the index of the first face in the hexagon at the coordinates q/r or undefined if no such hexagon exists\n     * \n     * @param {Number} q    q-position\n     * @param {Number} r    r-position\n     * \n     * @return {Number} faceIndex\n     */\n    getHexagon(q,r)\n    {\n        return this.hexagons.get(key(q,r))\n    }\n\n\n    /**\n     * Sets the face index for the hexagon at the coordinates q/r\n     *\n     * @param {Number} q            q-position\n     * @param {Number} r            r-position\n     * @param {Number} faceIndex    face index\n     */\n    setHexagon(q,r,faceIndex)\n    {\n        this.hexagons.set(key(q,r), faceIndex)\n    }\n\n    build()\n    {\n        let faces = [];\n        const verts = []\n\n        let hexCount = 0;\n        for (let q = -hSize; q < hSize; q++)\n        {\n            for (let r = -hSize; r < hSize; r++)\n            {\n                createHexagon(this.q + q, this.r + r, faces, verts, this)\n                hexCount++\n            }\n        }\n\n        console.log(\"Created #\" + hexCount + \" hexagons\")\n\n        const edges = [...findInsideEdges(faces)]\n        shuffle(env.world.rnd, edges)\n\n        const count = 0 | (edges.length * (0.8 + env.world.rnd.next() * 0.15 ))\n\n        for (let i = 0; i < count; i++)\n        {\n            const edge = edges[i];\n            removeEdge(faces, edge)\n        }\n\n        faces = divideIntoQuads(faces)\n        quickFix(faces)\n        relax(faces)\n        pixelatePositions(faces)\n        fixEdges(faces)\n        // faces.forEach(validateFace)\n        // validateFaces(faces)\n        return faces;\n    }\n}\n","import Prando from \"prando\"\nimport SimplexNoise from \"simplex-noise\"\nimport { Terrain, TerrainTypes } from \"./terrain\"\nimport { resolve } from \"./util\"\nimport env, { TAU } from \"./env\"\nimport shuffle from \"./shuffle\"\n\nimport RTree from \"rtree\"\n\n// A single iteration of Bob Jenkins' One-At-A-Time hashing algorithm.\nfunction hash( x ) {\n    x += ( x << 10 )\n    x ^= ( x >>  6 )\n    x += ( x <<  3 )\n    x ^= ( x >> 11 )\n    x += ( x << 15 )\n    return x;\n}\n\n\nexport const Biomes = TerrainTypes\n    .map((t,i) => t.name !== \"SEA\" && t.name !== \"ROCK\" ? i : -1 )\n    .filter(n => n >= 0)\n\n\nfunction createBiomes(prando)\n{\n    const biomes = new Array(256)\n    for (let i = 0; i < 256; i++)\n    {\n        biomes[i] = Biomes[0 | prando.next(0, Biomes.length)]\n    }\n    return biomes\n}\n\nfunction getRandomValues(prando, count)\n{\n    const out = []\n    for (let i = 0; i < count; i++)\n    {\n        out.push(prando.next())\n    }\n    return out;\n}\n\nexport const MAX_HEIGHT = 120\n\nexport const MAX_LATITUDE = 10800 // 2 * 10 hex patches in cartesian coordinates (not hex q/r)\n//export const MAX_LONGITUDE = MAX_LATITUDE * 2\n\n\n\nfunction norm(rnd, array, slices = 4)\n{\n    let sum = 0\n    for (let i = 0; i < array.length; i += 2)\n    {\n        const weight = array[i + 1]\n        sum += weight\n    }\n\n    const factor = 1/(sum * slices);\n\n    const out = []\n    for (let i = 0; i < array.length; i += 2)\n    {\n        const terrain = array[i]\n        let sliceWeight = array[i + 1] * factor\n        for (let j = 0; j < slices; j++)\n        {\n            out.push(\n                [\n                    terrain,\n                    sliceWeight\n                ]\n            )\n        }\n    }\n\n    shuffle(rnd, out)\n\n    sum = 0\n    for (let i = 0; i < out.length; i++)\n    {\n        const e = out[i]\n\n        const weight = e[1]\n        sum += weight\n        e[1] = sum\n    }\n    \n    return out\n}\n\n\n\n\nexport default class World\n{\n    /**\n     * Initial world seed\n     * @type {number}\n     */\n    seed = 0\n\n    /**\n     *\n     * @type {Prando}\n     */\n    rnd\n\n    /**\n     *\n     * @type {SimplexNoise}\n     */\n    noise\n\n    /**\n     * RTree for faces\n     *\n     * @type {RTree}\n     */\n    rTree = null\n\n    nh = []\n    bo = []\n\n    biomeLookup = []\n    biomeMask = 0\n\n    TROPIC = []\n    MODERATE = []\n\n    constructor(seed)\n    {\n        console.log(\"WORLD: seed = \", seed)\n        \n        this.seed = seed;\n        const prando = new Prando(seed)\n        this.rnd = prando;\n\n        // noise offsets x/y for 3 octaves\n        this.nh = getRandomValues(prando, 6)\n        this.bo = getRandomValues(prando, 9)\n\n        this.biomeMask = prando.nextInt()\n        this.biomeLookup = createBiomes(prando)\n        this.noise = new SimplexNoise(() => prando.next());\n\n        this.rTree = new RTree()\n\n        this.TROPIC = norm(\n            prando,\n            [Terrain.RAINFOREST, 3, Terrain.RAINFOREST_2,3, Terrain.TALL_GRASS,2, Terrain.GRASS,1, Terrain.MUD,1, Terrain.SAND, 1]\n        )\n        this.MODERATE = norm(\n            prando,\n            [Terrain.DARK_WOODS,4, Terrain.DIRT,1, Terrain.WOODS,4, Terrain.TALL_GRASS,4, Terrain.MUD,1,Terrain.SAND, 1, Terrain.GRASS, 4]\n        )\n\n        console.log(\"TROPIC\", this.TROPIC)\n        console.log(\"MODERATE\", this.MODERATE)\n    }\n\n\n    /**\n     * Calculates the height/y-coordinate for the given x/z coordinates.\n     *\n     * @param {number} x\n     * @param {number} z\n     *\n     * @param {number} offset\n     * @return {number} height or y-coordinate\n     */\n    calculateHeight(x, z, offset = 0)\n    {\n        const { noise, nh } = this\n\n        const [ox0, oy0, ox1, oy1, ox2, oy2 ] = nh\n\n        const ns0 = 0.003\n        const ns1 = ns0 * 0.13\n        const ns2 = ns0 * -0.17\n\n        // three octaves of noise\n        const h = (noise.noise3D(ox0 + x * ns0, oy0 + z * ns0, 0) * 0.7 +\n                   noise.noise3D(ox1 + x * ns1, oy1 + z * ns1, offset) * 0.2 +\n                   noise.noise3D(ox2 + x * ns2, oy2 + z * ns2, offset) * 0.1) * MAX_HEIGHT\n        return h\n    }\n\n    getBiome(x,y, z)\n    {\n    \n        const tempNs = 0.00007\n        const moistNs = 0.00005\n        const ns2 = 0.0013\n\n        const [ tempNx, tempNy, moistNx, moistNy, flavorNx, flavorNy, tempNz, moistNz, flavorNz ] = this.bo\n\n        const tempMalus = Math.min(1,1 - Math.cos(y/MAX_LATITUDE * TAU/4) * 4)\n        const moistureBonus = Math.pow(Math.cos(y/MAX_LATITUDE * TAU/4),2)\n\n        const temperature = Math.max(-1, this.noise.noise3D(tempNx + x * tempNs,tempNy + y * tempNs, tempNz) * 0.8 - tempMalus)\n        const moisture = Math.min(1,this.noise.noise3D(moistNx + x * moistNs,moistNy + y * moistNs, moistNz) + moistureBonus)\n        const flavor = (this.noise.noise3D(flavorNx + x * ns2,flavorNy + y * ns2, flavorNz) * 2 + this.noise.noise3D(flavorNy + y * ns2, flavorNx + x * ns2, flavorNx) * 3)/5\n\n        if (z < 0)\n        {\n            if (z < -10)\n            {\n                return Terrain.DEEP_SEA\n            }\n            return Terrain.SEA\n        }\n        else if (z < 12)\n        {\n            return Terrain.SAND\n        }\n\n        if (temperature < -0.25)\n        {\n            return Terrain.ICE\n        }\n\n        if (moisture < -0.3)\n        {\n            if (temperature < 0.8)\n            {\n                return Terrain.STEPPE\n            }\n            else\n            {\n                return Terrain.SAND\n            }\n        }\n\n        let area\n        if (temperature > 0.7 && moisture > 0.8)\n        {\n            area = this.TROPIC\n        }\n        else\n        {\n            area = this.MODERATE\n        }\n\n        let value = 1 + Math.max(-1.5,\n            Math.min(1.5,\n                flavor + moisture * 0.5\n            )\n        ) / 1.5\n\n        const last = area.length - 1\n        for (let i = 0; i < last; i++)\n        {\n            const [terrain, limit] = area[i]\n\n            if (value < limit)\n            {\n                return terrain\n            }\n            value -= limit\n        }\n        return area[last][0]\n    }\n\n}\n","export const SCALE = 10\nexport const TAU = 2 * Math.PI\n\nexport class Env\n{\n    /**\n     * The world\n     * @type {World}\n     */\n    world = null\n\n    init(world)\n    {\n        this.world = world\n    }\n}\n\nexport default new Env()\n","let vertexCounter = 1000;\n\nexport class Vertex\n{\n    /**\n     * X coordinate\n     * @type {number}\n     */\n    x;\n    /**\n     * Y coordinate\n     * @type {number}\n     */\n    y;\n\n    /**\n     * Z coordinate\n     * @type {number}\n     */\n    z;\n\n    /**\n     * Half-edge \n     * @type {null}\n     */\n    halfEdge = null;\n\n    id = 0\n\n    biome = -1\n\n    constructor(x, y, z, halfEdge)\n    {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        this.halfEdge = halfEdge;\n        this.id = vertexCounter++;\n    }\n\n    round()\n    {\n        this.x |= 0\n        this.y |= 0\n        this.z |= 0\n\n        return this\n    }\n\n    toString()\n    {\n        return \"#\" + this.id + \": \" + (this.x) + \"/\" + (this.y)// + \"/\" + this.z\n    }\n\n\n}\n\n\nexport class Edge\n{\n    /**\n     * One of the two half edges of the edge.\n     *\n     * @type {HalfEdge}\n     */\n    halfEdge = null;\n    constructor(halfEdge)\n    {\n        this.halfEdge = halfEdge;\n    }\n\n}\nlet faceCounter = 0;\n\nlet faceGroupCounter = 0\n\nexport class FaceGroup\n{\n    /**\n     * Unique group id\n     *\n     * @type {number}\n     */\n    id = ++faceGroupCounter\n\n    /**\n     * Number of faces in the group (3 or 4)\n     *\n     * @type {number}\n     */\n    size = 0\n\n\n    constructor(size)\n    {\n        this.size = size\n    }\n}\n\n\nexport class Face\n{\n    /**\n     * First half edge of the face interior, part of a closed loop back to the fist edge.\n     *\n     * @type {HalfEdge}\n     */\n    halfEdge = null;\n\n\n    //// TERRAIN DATA //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Face group this tile belongs to\n     *\n     * @type {FaceGroup}\n     */\n    group = null\n\n    aabb = null\n    \n    /**\n     * Center point of this face which is the x/z centroid at height map height\n     *\n     * @type {Array.<Number>}\n     */\n    center = null\n\n    constructor(halfEdge)\n    {\n        this.halfEdge = halfEdge;\n        this.id = faceCounter++;\n\n    }\n    get length()\n    {\n        const start = this.halfEdge;\n        let curr = start;\n        let count = 0;\n        do\n        {\n            curr = curr.next\n            count++;\n        } while (curr !== start)\n        return count;\n    }\n\n\n    /**\n     * Returns the face centroid\n     * @return {number[]} x/y/z as array\n     */\n    get centroid()\n    {\n        let x = 0;\n        let y = 0;\n        let z = 0;\n        let count = 0;\n\n        const visited = new Set()\n\n        const first = this.halfEdge\n        let curr = first\n        do\n        {\n            visited.add(curr)\n\n            x += curr.vertex.x;\n            y += curr.vertex.y;\n            z += curr.vertex.z;\n            curr = curr.next\n            count++;\n\n        } while (!visited.has(curr))\n\n        return [x / count, y / count, z/count];\n    }\n}\n\nlet counter = 0;\n\n/**\n * Central class of the half edge data structure\n */\nexport class HalfEdge\n{\n    /**\n     * Next halfEdge in the face\n     * @type {HalfEdge}\n     */\n    next = null;\n\n    /**\n     * Twin halfEdge from another face\n     * @type {HalfEdge}\n     */\n    twin = null;\n    /**\n     * Vertex of this half edge\n     * @type {Vertex}\n     */\n    vertex = null;\n\n    /**\n     * The edge the half edge belongs to\n     * @type {Edge}\n     */\n    edge = null;\n\n    /**\n     * The face the half edge belongs to\n     * @type {Face}\n     */\n    face = null;\n\n    constructor(next, vertex, edge, face)\n    {\n        this.next = next;\n        this.twin = null;\n        this.vertex = vertex;\n        this.edge = edge;\n        this.face = face;\n\n        if (vertex && !vertex.halfEdge)\n        {\n            vertex.halfEdge = this;\n        }\n\n        if (edge && !edge.halfEdge)\n        {\n            edge.halfEdge = this;\n        }\n\n        if (face && !face.halfEdge)\n        {\n            face.halfEdge = this;\n        }\n\n        this.id = counter++\n\n    }\n\n\n    twinWith(other)\n    {\n        if (__DEV)\n        {\n            let { vertex : v0 } = this\n            let { vertex : v1 } = this.next\n            let { vertex : v2 } = other\n            let { vertex : v3 } = other.next\n\n            if (v0.x !== v3.x || v0.y !== v3.y || v1.x !== v2.x || v1.y !== v2.y)\n            {\n                throw new Error(\"Half edge coords not twinned \" + this + \": \" + v0 + \", \" + v1 + \", \" + v2 + \", \" + v3)\n            }\n        }\n\n        this.twin = other\n        other.twin = this\n\n        this.vertex = other.next.vertex\n        other.vertex = this.next.vertex\n        \n        other.edge = this.edge || other.edge\n        other.edge.halfEdge = this\n    }\n\n    get prev()\n    {\n        let curr = this;\n        do\n        {\n            curr = curr.next\n        } while (curr.next !== this)\n\n        //console.log(\"prev of \", this, \"is\", curr)\n\n        return curr;\n    }\n\n}\n","const WIREFRAME = false\n\nimport \"./style.css\"\nimport HexagonPatch from \"./HexagonPatch\"\nimport env, { SCALE } from \"./env\"\nimport perfNow from \"performance-now\"\n\nimport {\n    AmbientLight,\n    BoxGeometry, BufferGeometry, ConeBufferGeometry,\n    DirectionalLight,\n    DirectionalLightHelper, LineBasicMaterial, LineSegments,\n    Mesh,\n    MeshStandardMaterial,\n    PCFSoftShadowMap,\n    PerspectiveCamera,\n    Scene, Vector3,\n    WebGLRenderer\n} from \"three\"\n\n\nimport { EffectComposer } from \"three/addons/postprocessing/EffectComposer.js\"\nimport { RenderPass } from \"three/addons/postprocessing/RenderPass.js\"\nimport { BokehPass } from \"three/addons/postprocessing/BokehPass.js\"\nimport World from \"./World\"\nimport { Terrain } from \"./terrain\"\nimport loadModel from \"./loadModel\"\n\nconst TAU = Math.PI * 2\n\nlet camera, scene, renderer\n\nlet mouseX = 0, mouseY = 0, mouseFirst = true;\nlet mouseDeltaX = 0, mouseDeltaY = 0;\n\nlet windowHalfX = window.innerWidth / 2;\nlet windowHalfY = window.innerHeight / 2;\n\nlet width = window.innerWidth;\nlet height = window.innerHeight;\n\nconst postprocessing = {};\n\nconst cameraRadius = 50\n\nlet cameraHeight = 1\nlet cameraAngle = 0\n\nconst adjustedZero = new Vector3(0,0,0)\n\nfunction init()\n{\n    //const seed = 1412\n    const seed = -202558213\n    //const seed = (Math.random() * 4294967296) & 0xffffffff\n    const world = new World(seed)\n    env.init(world)\n\n    adjustedZero.setY(world.calculateHeight(0,0) + 5)\n\n    const container = document.getElementById(\"root\")\n\n    camera = new PerspectiveCamera( 50, width / height, 1, 30000 );\n\n    scene = new Scene();\n\n    renderer = new WebGLRenderer();\n    // renderer.shadowMap.enabled = true;\n    // renderer.shadowMap.type = PCFSoftShadowMap; // default THREE.PCFShadowMap\n    renderer.setPixelRatio( window.devicePixelRatio );\n    renderer.setSize( width, height );\n    container.appendChild( renderer.domElement );\n\n    const ambientLight = new AmbientLight(\"#4572ff\", 0.4)\n    scene.add(ambientLight)\n\n    const directionalLight = new DirectionalLight( 0xffffff, 1 );\n    // directionalLight.castShadow = true\n    //Set up shadow properties for the light\n    // directionalLight.shadow.mapSize.width = 512; // default\n    // directionalLight.shadow.mapSize.height = 512; // default\n    // directionalLight.shadow.camera.near = 0.5; // default\n    // directionalLight.shadow.camera.far = 500; // default\n\n    directionalLight.position.set(0,adjustedZero.y + 20,10);\n    directionalLight.target.position.copy(adjustedZero)\n    directionalLight.target.updateWorldMatrix()\n\n    scene.add( directionalLight );\n    const helper = new DirectionalLightHelper( directionalLight, 2 );\n    helper.position.copy(adjustedZero)\n    scene.add( helper );\n\n    const patch = new HexagonPatch(0, 0)\n    const terrain = new Terrain(scene, world, patch)\n\n    const [geoms, lines] = terrain.createGeometries(msTiles)\n\n\n    geoms.forEach(\n        (geom) => {\n            const geometry = geom.createThreeGeometry()\n            if (geometry)\n            {\n                const material = new MeshStandardMaterial({\n                    roughness: 0.9,\n                    ... geom.terrain.material,\n                    wireframe: WIREFRAME,\n                    //vertexColors: true\n                })\n\n                const mesh = new Mesh(geometry, material)\n                // mesh.castShadow = true\n                // mesh.receiveShadow = true\n                scene.add(mesh)\n            }\n        }\n    )\n\n    if (lines.length)\n    {\n        const material = new LineBasicMaterial({\n            color: 0x7f000000,\n            depthTest: false\n        });\n\n        const geometry = new BufferGeometry().setFromPoints( lines );\n\n        const line = new LineSegments( geometry, material );\n        scene.add( line );\n    }\n\n    const material = new MeshStandardMaterial({\n        roughness: 0.9,\n        color: \"#c55\"\n    })\n\n    const cubeGeo = new ConeBufferGeometry(5,10)\n    const cube = new Mesh(cubeGeo, material)\n    // cube.castShadow = true\n    // cube.receiveShadow = true\n    cube.position.copy(adjustedZero)\n    scene.add(cube)\n    //\n    // tiles.forEach( t => {\n    //\n    //     t.position.setY(10)\n    //     scene.add(t)\n    // })\n\n    ///////////////////////////////////////////////\n\n    initPostprocessing();\n\n    renderer.autoClear = false;\n\n    container.style.touchAction = 'none';\n    container.addEventListener( 'pointermove', onPointerMove );\n\n    window.addEventListener( 'resize', onWindowResize );\n\n    postprocessing.bokeh.uniforms[ 'focus' ].value = 100;\n    postprocessing.bokeh.uniforms[ 'aperture' ].value = 0.00005;\n    //postprocessing.bokeh.uniforms[ 'maxblur' ].value = 0.015;\n    postprocessing.bokeh.uniforms[ 'maxblur' ].value = 0.005;\n}\n\nfunction onPointerMove( event ) {\n\n    if ( event.isPrimary === false ) return;\n\n    const prevX = mouseX\n    const prevY = mouseY\n\n    mouseX = event.clientX - windowHalfX;\n    mouseY = event.clientY - windowHalfY;\n\n    if (!mouseFirst && !event.shiftKey)\n    {\n        mouseDeltaX += (mouseX - prevX)\n        mouseDeltaY += (mouseY - prevY)\n    }\n    mouseFirst = false\n}\n\nfunction onWindowResize() {\n\n    windowHalfX = window.innerWidth / 2;\n    windowHalfY = window.innerHeight / 2;\n\n    width = window.innerWidth;\n    height = window.innerHeight;\n\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize( width, height );\n    postprocessing.composer.setSize( width, height );\n\n}\n\nfunction initPostprocessing() {\n\n    const renderPass = new RenderPass( scene, camera );\n\n    const bokehPass = new BokehPass( scene, camera, {\n        focus: 1.0,\n        aperture: 0.025,\n        maxblur: 0.01\n    } );\n\n    const composer = new EffectComposer( renderer );\n\n    composer.addPass( renderPass );\n    composer.addPass( bokehPass );\n\n    postprocessing.composer = composer;\n    postprocessing.bokeh = bokehPass;\n\n}\n\nfunction animate() {\n\n    requestAnimationFrame( animate);\n    render();\n}\n\nfunction render() {\n\n    const time = perfNow() * 0.005;\n\n    const sensitivity = 0.00036\n    const sensitivityY = 0.05\n    cameraAngle += mouseDeltaX * sensitivity\n\n    const cameraX = Math.cos(cameraAngle) * cameraRadius\n    const cameraZ = Math.sin(cameraAngle) * cameraRadius\n\n    const camBase = env.world.calculateHeight(cameraX, cameraZ);\n\n    const minY = camBase + 10\n    const maxY = camBase + 250\n\n    cameraHeight -= mouseDeltaY * sensitivityY\n    cameraHeight = cameraHeight < minY ? minY : cameraHeight > maxY ? maxY : cameraHeight\n\n    camera.position.set(cameraX, cameraHeight, cameraZ)\n\n    camera.lookAt( adjustedZero );\n\n    postprocessing.bokeh.uniforms.focus.value = camera.position.clone().sub(adjustedZero).length()\n    postprocessing.composer.render( 0.01 );\n\n    mouseDeltaX = Math.floor(mouseDeltaX * 90) / 100\n    mouseDeltaY = Math.floor(mouseDeltaY * 90) / 100\n\n}\n\nlet msTiles = {}\n\nPromise.all([\n    loadModel(\"media/marching-squares.glb\")\n])\n.then(\n    ([gltf]) => {\n\n        gltf.scene.children.forEach( k => {\n            msTiles[k.name] = k\n        })\n\n        // console.log(\"TILE NAMES\", Object.keys(msTiles))\n        // console.log(\"TILES\", msTiles)\n\n        init();\n\n        console.log(\"RTREE\", env.world.rTree)\n\n        animate();\n\n        window.addEventListener(\"gamepadconnected\", (e) => {\n\n            document.getElementById(\"img-ghostpad\").className = \"invisible\"\n            document.getElementById(\"img-gamepad\").className = \"\"\n\n            const gp = navigator.getGamepads()[e.gamepad.index];\n\n            console.log(`Gamepad connected at index ${gp.index}: ${gp.id}. It has ${gp.buttons.length} buttons and ${gp.axes.length} axes.`)\n\n\n        });\n\n        window.addEventListener(\"gamepaddisconnected\", (e) => {\n\n            document.getElementById(\"img-ghostpad\").className = \"\"\n            document.getElementById(\"img-gamepad\").className = \"invisible\"\n\n        });\n\n    }\n)\n\n\n","// Instantiate a loader\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nconst loader = new GLTFLoader();\n\nexport default function loadModel(url, onProgress = null)\n{\n    return new Promise(((resolve, reject) => {\n        // Load a glTF resource\n        loader.load(\n            // resource URL\n            url,\n            // called when the resource is loaded\n            resolve,\n            // called while loading is progressing\n            onProgress,\n            // called when loading has errors\n            reject\n        );\n    }))\n}\n","import env from \"./env\"\n\n\nexport default function shuffle(rnd, a) {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(rnd.next(0, (i + 1)));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n","import { BufferGeometry, Float32BufferAttribute, Vector3 } from \"three\"\nimport { forEachHalfEdge } from \"./util\"\nimport { distance } from \"three/nodes\"\nimport AABB from \"./AABB\"\n\n\nfunction calculateNormalFromHeightMap(world, x0, z0)\n{\n    const e = 0.01\n\n    const x1 = x0 + e\n    const z1 = z0\n\n    const x2 = x0\n    const z2 = z0 + e\n\n    const y0 = world.calculateHeight(x0,z0)\n    const y1 = world.calculateHeight(x1,z1)\n    const y2 = world.calculateHeight(x2,z2)\n\n    return calculateNormal(x0, y0, z0, x1, y1, z1, x2, y2, z2)\n}\n\nexport function calculateNormal(x0, y0, z0, x1, y1, z1, x2, y2, z2)\n{\n    const ax = x1 - x0\n    const ay = y1 - y0\n    const az = z1 - z0\n    const bx = x2 - x0\n    const by = y2 - y0\n    const bz = z2 - z0\n\n    const nx = ay * bz - az * by\n    const ny = az * bx - ax * bz\n    const nz = ax * by - ay * bx\n\n    const f = 1/ Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n    // if (f === Infinity)\n    // {\n    //     return [0,1,0]\n    // }\n\n    return [\n        nx * f,\n        ny * f,\n        nz * f\n    ]\n}\n\n\n// console.log(TerrainTypes.map((t,i) => t.name + \": \" + i + \",\").join(\"\\n\"))\n\nfunction initFace(world,face)\n{\n    const patchX = 0\n    const patchY = 0\n\n    const first = face.halfEdge;\n    let curr = first;\n\n    let x = 0\n    let z = 0\n\n    const aabb = new AABB()\n    do\n    {\n        const next = curr.next;\n\n        const x0 = 0|patchX + curr.vertex.x\n        const z0 = 0|patchY + curr.vertex.y\n\n        x += x0;\n        z += z0;\n\n        aabb.add(x,z)\n\n        curr = next\n    }  while (curr !== first)\n    x >>= 2\n    z >>= 2\n\n    face.center = [\n        x,\n        Math.round(world.calculateHeight(x, z)),\n        z\n    ]\n    face.aabb = aabb\n\n    world.rTree.insert(aabb, face)\n}\n\nfunction getArea(face) {\n    const patchX = 0\n    const patchY = 0\n\n    const first = face.halfEdge;\n    let curr = first;\n\n    let area = 0\n    do\n    {\n        const next = curr.next;\n\n        const x0 = 0|patchX + curr.vertex.x\n        const z0 = 0|patchY + curr.vertex.y\n        const x1 = 0|patchX + next.vertex.x\n        const z1 = 0|patchY + next.vertex.y\n\n        area += z1 * x0 - x1 * z0;\n\n        curr = next\n    }  while (curr !== first)\n\n    return area / 2;\n}\n\nfunction initializeFaces(world, faces)\n{\n    faces.forEach(\n        face => {\n            initFace(world, face)\n\n            forEachHalfEdge(face, he => {\n                const { vertex } = he\n                if (vertex.biome < 0)\n                {\n                    vertex.z = world.calculateHeight(vertex.x, vertex.y)\n                    vertex.biome = world.getBiome(vertex.x, vertex.y, vertex.z)\n                    if (vertex.z < 10)\n                    {\n                        vertex.z = 10\n                    }\n\n                }\n            })\n        }\n    )\n}\nclass GeomPerMat\n{\n    world = null\n    indices = []\n    vertices = []\n    normals = []\n    terrain = -1\n\n    constructor(\n        world,\n        terrain\n    )\n    {\n        this.world = world\n        this.terrain = terrain\n    }\n\n\n    triFn()\n    {\n        const vOff = this.vertices.length/3\n        return (a, b, c) => this.indices.push(vOff + a, vOff + b, vOff + c)\n    }\n\n\n    addVertices(x, y, z)\n    {\n        this.vertices.push(x,y,z)\n    }\n\n    addNormal(x, y, z)\n    {\n        const l = Math.sqrt(x * x + y * y + z * z);\n        const f = 1/l\n        x *= f\n        y *= f\n        z *= f\n        this.normals.push(x,y,z)\n    }\n\n    getVertex(idx)\n    {\n        const off = idx * 3\n        const x = this.vertices[off]\n        const y = this.vertices[off + 1]\n        const z = this.vertices[off + 2]\n\n        return [x,y,z]\n    }\n\n\n\n    createThreeGeometry()\n    {\n        if (!this.indices.length)\n        {\n            console.log(\"No geometry for \" + this.terrain.name)\n            return null;\n        }\n\n        // console.log(\"index\", this.indices)\n        // console.log(\"position\", this.vertices)\n        // console.log(\"normal\", this.normals)\n\n        const geometry = new BufferGeometry()\n        geometry.setIndex(this.indices)\n        geometry.setAttribute(\"position\", new Float32BufferAttribute(this.vertices, 3))\n        geometry.setAttribute(\"normal\", new Float32BufferAttribute(this.normals, 3))\n        return geometry\n    }\n}\n\nlet tileNameLookup = [\n    null,\n    \"case-1\",\n    \"case-2\",\n    \"case-3\",\n    \"case-4\",\n    \"case-m5\",\n    \"case-6\",\n    \"case-7\",\n    \"case-8\",\n    \"case-9\",\n    \"case-m10\",\n    \"case-11\",\n    \"case-12\",\n    \"case-13\",\n    \"case-14\",\n    \"case-15\",\n\n    // multi case\n    null,\n    \"case-m1\",\n    \"case-m2\",\n    \"case-3\",\n    \"case-m4\",\n    \"case-m5\",\n    \"case-6\",\n    \"case-7\",\n    \"case-m8\",\n    \"case-9\",\n    \"case-m10\",\n    \"case-11\",\n    \"case-12\",\n    \"case-13\",\n    \"case-14\",\n    \"case-15\",\n]\n\n\nfunction getDistance(x0, y0, z0, x1, y1, z1)\n{\n    const dx = x1 - x0\n    const dy = y1 - y0\n    const dz = z1 - z0\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz)\n}\n\nfunction getStats(diffs)\n{\n\n    let median\n    const len = diffs.length\n    let half = len >> 1\n    if ((len & 1) === 0)\n    {\n        median = diffs[half].diff\n    }\n    else\n    {\n        median = (diffs[half].diff + diffs[half + 1].diff)/2\n    }\n\n    console.log(\"DIFFS\", diffs)\n    console.log(\"Median Height difference\", median)\n    console.log(\"Average Height difference\", diffs.reduce((a,b) => a + b.diff, 0) / diffs.length)\n\n}\n\nfunction getEdgesByHeightDifference(faces)\n{\n    const edgesCounted = new Set()\n\n    const differences = []\n    for (let i = 0; i < faces.length; i++)\n    {\n        const face = faces[i]\n\n        const first = face.halfEdge;\n        let curr = first;\n        do\n        {\n            let edge = curr.edge\n            if (!edgesCounted.has(edge) && curr.twin)\n            {\n                edgesCounted.add(edge)\n\n                const y0 = face.center[2]\n                const y1 = curr.twin.face.center[2]\n\n                const diff = Math.abs(y0-y1)\n                differences.push({diff, edge})\n            }\n\n            curr = curr.next\n\n        } while (curr !== first)\n    }\n\n    differences.sort((a,b) => a.diff - b.diff)\n\n    return differences\n}\n\n\nexport class Terrain {\n    /**\n     * @type {Scene}\n     */\n    scene = null\n\n    /**\n     *\n     * @type {HexagonPatch}\n     */\n    patch = null\n\n    world = null\n\n    /**\n     *\n     * @type {Array.<Face>}\n     */\n    faces = null\n\n\n    constructor(scene, world, patch)\n    {\n        this.scene = scene\n        this.world = world\n        this.patch = patch\n        this.faces = this.patch.build()\n\n        initializeFaces(world, this.faces)\n    }\n\n\n    createGeometries(msTiles)\n    {\n        const MARK_FACES = false\n\n        const patchX = 0\n        const patchY = 0\n\n        const { world } = this\n\n        const geoms = TerrainTypes.map( tt => new GeomPerMat(world,tt))\n\n        const lines = []\n        const faces = this.faces\n\n\n\n        for (let i = 0; i < faces.length; i++)\n        {\n            const face = faces[i]\n            const first = face.halfEdge\n            const { biome: biome3 } = first.vertex\n            const { biome: biome2 } = first.next.vertex\n            const { biome: biome1 } = first.next.next.vertex\n            const { biome: biome0 } = first.next.next.next.vertex\n\n\n            const localBiomes = new Set([\n                biome0,\n                biome1,\n                biome2,\n                biome3\n            ])\n\n            const multiMode = localBiomes.size > 2\n\n            if (localBiomes.size === 1)\n            {\n                // easiest case. We only have one biome, case-15 with that biome, done\n                this.insert(msTiles[\"case-15\"], face, geoms[biome0])\n            }\n            else\n            {\n                for (let terrain of localBiomes)\n                {\n                    const tileName = tileNameLookup[\n                        ((terrain === biome0) + (terrain === biome1) * 2 + (terrain === biome2) * 4 + (terrain === biome3) * 8) +\n                        multiMode * 16\n                        ]\n\n                    if (tileName)\n                    {\n                        this.insert(msTiles[tileName], face, geoms[terrain])\n                    }\n                }\n            }\n\n            const { vertex: vertex0 } = first\n            const { vertex: vertex1 } = first.next\n            const { vertex: vertex2 } = first.next.next\n            const { vertex: vertex3 } = first.next.next.next\n\n\n            if (MARK_FACES)\n            {\n                lines.push(\n                    new Vector3(vertex0.x, vertex0.z, vertex0.y),\n                    new Vector3(vertex1.x, vertex1.z, vertex1.y)\n                )\n                lines.push(\n                    new Vector3(vertex1.x, vertex1.z, vertex1.y),\n                    new Vector3(vertex2.x, vertex2.z, vertex2.y)\n                )\n                lines.push(\n                    new Vector3(vertex2.x, vertex2.z, vertex2.y),\n                    new Vector3(vertex3.x, vertex3.z, vertex3.y)\n                )\n                lines.push(\n                    new Vector3(vertex3.x, vertex3.z, vertex3.y),\n                    new Vector3(vertex0.x, vertex0.z, vertex0.y)\n                )\n\n                lines.push(\n                    new Vector3(vertex0.x, vertex0.z, vertex0.y),\n                    new Vector3(\n                        (vertex0.x * 4 + vertex1.x + vertex2.x + vertex3.x)/7,\n                        (vertex0.z * 4 + vertex1.z + vertex2.z + vertex3.z)/7,\n                        (vertex0.y * 4 + vertex1.y + vertex2.y + vertex3.y)/7,\n                    ),\n                )\n            }\n\n        }\n\n        let diff = getEdgesByHeightDifference(faces)\n        getStats(diff)\n\n        diff.filter(e => e.diff > 15).forEach(\n            ({edge}) => {\n\n                const vertex0 = edge.halfEdge.vertex\n                const vertex1 = edge.halfEdge.next.vertex\n\n                lines.push(\n                    new Vector3(vertex0.x, vertex0.z, vertex0.y),\n                    new Vector3(vertex1.x, vertex1.z, vertex1.y)\n                )\n            }\n        )\n\n        return [geoms, lines]\n    }\n\n\n    insert(tile, face, geom)\n    {\n        //console.log(\"INSERT\", tile, face, biome)\n\n        if (tile.type !== \"Mesh\")\n        {\n            throw new Error(\"Expecting only meshes, is: \" + geometry.type)\n        }\n\n        const { world } = this\n        const { geometry } = tile\n\n        const first = face.halfEdge\n        const { vertex: vertex0 } = first\n        const { vertex: vertex1 } = first.next\n        const { vertex: vertex2 } = first.next.next\n        const { vertex: vertex3 } = first.next.next.next\n\n\n        const verticesIn = geometry.attributes.position.array\n        const normalsIn = geometry.attributes.normal.array\n        const indexIn = geometry.index.array\n\n        const tri = geom.triFn()\n\n        // hexagon patch vertices are z-up, so we swap\n        const { x: x0, y: z0, z: y0} = vertex0\n        const { x: x1, y: z1, z: y1} = vertex1\n        const { x: x2, y: z2, z: y2} = vertex2\n        const { x: x3, y: z3, z: y3} = vertex3\n\n        for (let i = 0; i < verticesIn.length; i += 3)\n        {\n            let xIn = verticesIn[i    ]\n            let yIn = -verticesIn[i + 1]\n            let zIn = verticesIn[i + 2]\n\n            let x = xIn + 0.5\n            const y = yIn\n            let z = zIn + 0.5\n\n            const scale = (getDistance(x0,y0,z0,x2,y2,z2))/ Math.sqrt(2)\n\n            let rx2, ry2, rz2\n            let localUp;\n            {\n                const rx0 = x0 + (x1 - x0 ) * x\n                const ry0 = y0 + (y1 - y0 ) * x\n                const rz0 = z0 + (z1 - z0 ) * x\n\n                const rx1 = x3 + (x2 - x3 ) * x\n                const ry1 = y3 + (y2 - y3 ) * x\n                const rz1 = z3 + (z2 - z3 ) * x\n\n                rx2 = rx0 + (rx1 - rx0 ) * z\n                ry2 = ry0 + (ry1 - ry0 ) * z\n                rz2 = rz0 + (rz1 - rz0 ) * z\n\n                localUp = calculateNormalFromHeightMap(world, rx2, rz2)\n\n                //console.log(\"LOCAL UP\", localUp)\n\n                rx2 += localUp[0] * y * scale\n                ry2 += localUp[1] * y * scale\n                rz2 += localUp[2] * y * scale\n\n                geom.addVertices(rx2, ry2, rz2)\n            }\n\n\n            {\n                const nx = x + normalsIn[i    ]\n                const ny = y - normalsIn[i + 1]\n                const nz = z + normalsIn[i + 2]\n\n                const rx0 = x0 + (x1 - x0 ) * nx\n                const ry0 = y0 + (y1 - y0 ) * nx\n                const rz0 = z0 + (z1 - z0 ) * nx\n\n                const rx1 = x3 + (x2 - x3 ) * nx\n                const ry1 = y3 + (y2 - y3 ) * nx\n                const rz1 = z3 + (z2 - z3 ) * nx\n\n                let rnx = rx0 + (rx1 - rx0 ) * nz\n                let rny = ry0 + (ry1 - ry0 ) * nz\n                let rnz = rz0 + (rz1 - rz0 ) * nz\n\n                rnx += localUp[0] * ny * scale\n                rny += localUp[1] * ny * scale\n                rnz += localUp[2] * ny * scale\n\n                geom.addNormal(rnx - rx2, rny - ry2, rnz - rz2)\n            }\n        }\n\n        for (let i = 0; i < indexIn.length; i+=3)\n        {\n            const a = indexIn[i]\n            const b = indexIn[i+1]\n            const c = indexIn[i+2]\n\n            tri(a,b,c)\n        }\n    }\n}\n\nexport const TerrainTypes = [\n    {\n        \"name\": \"SEA\",\n        material : {\n            roughness: 0.1,\n            color : \"#002888\",\n        }\n    },\n    {\n        \"name\": \"DEEP_SEA\",\n        material : {\n            roughness: 0.2,\n            color : \"#060f69\",\n        }\n    },\n    {\n        \"name\": \"GRASS\",\n        material : {\n            roughness: 0.96,\n            color: \"#284\",\n        }\n    },\n    {\n        \"name\": \"WATER\",\n        material : {\n            roughness: 0.05,\n            color: \"#004290\",\n        }\n    },\n    {\n        \"name\": \"TALL_GRASS\",\n        material : {\n            roughness: 0.98,\n            color: \"#4b8822\",\n        }\n    },\n    {\n        \"name\": \"REEDS\",\n        material : {\n            roughness: 0.98,\n            color: \"#7e8822\",\n        }\n    },\n    {\n        \"name\": \"WOODS\",\n        material : {\n            roughness: 0.94,\n            color: \"#1c6b37\",\n        }\n    },\n    {\n        \"name\": \"DARK_WOODS\",\n        material : {\n            roughness: 0.94,\n            color: \"#103b29\",\n        }\n    },\n    {\n        \"name\": \"DIRT\",\n        material : {\n            roughness: 0.99,\n            color: \"#4d2605\",\n        }\n    },\n    {\n        \"name\": \"MUD\",\n        material : {\n            roughness: 0.7,\n            color: \"#38261e\",\n        }\n    },\n    {\n\n        \"name\": \"SAND\",\n        material : {\n            roughness: 0.99,\n            color : \"#afaa41\",\n        }\n    },\n    {\n        \"name\": \"ICE\",\n        material : {\n            roughness: 0.4,\n            color : \"#bbbbff\",\n        }\n    },\n    {\n        \"name\": \"SNOW\",\n        material : {\n            roughness: 0.4,\n            color : \"#bbbbff\",\n        }\n    },\n    {\n        \"name\": \"ROCK\",\n        material : {\n            roughness: 0.7,\n            color : \"#777\",\n        }\n    },\n    {\n        \"name\": \"RAINFOREST\",\n        material : {\n            roughness: 0.95,\n            color: \"#049439\",\n        }\n    },\n    {\n        \"name\": \"RAINFOREST_2\",\n        material : {\n            roughness: 0.96,\n            color: \"#056442\",\n        }\n    },\n    {\n        \"name\": \"STEPPE\",\n        material : {\n            roughness: 0.96,\n            color : \"#93a167\",\n        }\n    },\n]\n\n// console.log(TerrainTypes.map((t,i) => \"Terrain.\" + t.name + \" = \" + i).join(\"\\n\"))\n\nTerrain.SEA = 0\nTerrain.DEEP_SEA = 1\nTerrain.GRASS = 2\nTerrain.WATER = 3\nTerrain.TALL_GRASS = 4\nTerrain.REEDS = 5\nTerrain.WOODS = 6\nTerrain.DARK_WOODS = 7\nTerrain.DIRT = 8\nTerrain.MUD = 9\nTerrain.SAND = 10\nTerrain.ICE = 11\nTerrain.SNOW = 12\nTerrain.ROCK = 13\nTerrain.RAINFOREST = 14\nTerrain.RAINFOREST_2 = 15\nTerrain.STEPPE = 16\n","export function clamp(v)\n{\n    return v < 0 ? 0 : v > 1 ? 1 : v;\n}\n\nexport function resolve(names, values)\n{\n    const indexes = []\nouter:\n    for (let i = 0; i < names.length; i++)\n    {\n        const name = names[i]\n        for (let j = 0; j < values.length; j++)\n        {\n            const value = values[j]\n            if (value.name === name)\n            {\n                indexes.push(j)\n                continue outer;\n            }\n        }\n        throw new Error(\"Could not find element with name \" + name);\n    }\n    return indexes;\n}\n\n\nexport function forEachHalfEdge(face, fn)\n{\n    const first = face.halfEdge;\n    let curr = first;\n    do\n    {\n        fn(curr)\n        curr = curr.next\n    }  while (curr !== first)\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkDemo\"] = self[\"webpackChunkDemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors\"], function() { return __webpack_require__(\"./src/index.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["AABB","minX","Infinity","minY","maxX","maxY","add","x","y","Math","min","max","w","h","center","grow","n","shrink","dir","amount","Error","Edge","Face","FaceGroup","HalfEdge","Vertex","env","shuffle","findInsideEdges","faces","edges","Set","i","length","face","first","halfEdge","curr","twin","edge","next","getEdges","findFaceIndex","other","resetFacesInLoop","prev","removeEdge","onlyFromTris","he","index","splice","twinPrev","subdivideEdge","vertex","z","newEdge","twinWith","divideTriIntoQuads","ha","hab","hb","hbc","hc","hca","fa","fb","fc","hvca","hvab","hvbc","habv","hbcv","hcav","group","push","subdivideQuad","hcd","hd","hda","fd","hvcd","hvda","hcdv","hdav","divideIntoQuads","forEach","e","newFaces","validateFace","set","has","setToAverage","v","start","count","relax","verts","relaxCount","j","console","log","size","pDistance","x1","y1","x2","y2","A","B","C","D","dot","len_sq","param","xx","yy","dx","dy","sqrt","getMinimumDistanceToPoint","x0","y0","dist","quickFix","map","Map","key","round","k","existing","get","pixelatePositions","getSetOfIds","ids","id","validateFaces","warn","fixEdges","connectedCount","notConnectedCount","TAU","PI","sin60","sin","hFactor","directions","evenNeighbors","oddNeighbors","createHexagon","q","r","points","patch","setHexagon","hw","offX","offY","d","v3","prevFace","firstFace","last","v2","he0","he1","he2","neighbors","qOff","rOff","faceIndex","getHexagon","undefined","PATCH_SIZE","hSize","HexagonPatch","constructor","hexagons","build","hexCount","world","rnd","SIZE","Prando","SimplexNoise","Terrain","TerrainTypes","resolve","RTree","hash","Biomes","t","name","filter","createBiomes","prando","biomes","Array","getRandomValues","out","MAX_HEIGHT","MAX_LATITUDE","norm","array","slices","sum","weight","factor","terrain","sliceWeight","World","seed","noise","rTree","nh","bo","biomeLookup","biomeMask","TROPIC","MODERATE","nextInt","RAINFOREST","RAINFOREST_2","TALL_GRASS","GRASS","MUD","SAND","DARK_WOODS","DIRT","WOODS","calculateHeight","offset","ox0","oy0","ox1","oy1","ox2","oy2","ns0","ns1","ns2","noise3D","getBiome","tempNs","moistNs","tempNx","tempNy","moistNx","moistNy","flavorNx","flavorNy","tempNz","moistNz","flavorNz","tempMalus","cos","moistureBonus","pow","temperature","moisture","flavor","DEEP_SEA","SEA","ICE","STEPPE","area","value","limit","SCALE","Env","init","vertexCounter","biome","toString","faceCounter","faceGroupCounter","aabb","centroid","visited","counter","__DEV","v0","v1","WIREFRAME","perfNow","AmbientLight","BoxGeometry","BufferGeometry","ConeBufferGeometry","DirectionalLight","DirectionalLightHelper","LineBasicMaterial","LineSegments","Mesh","MeshStandardMaterial","PCFSoftShadowMap","PerspectiveCamera","Scene","Vector3","WebGLRenderer","EffectComposer","RenderPass","BokehPass","loadModel","camera","scene","renderer","mouseX","mouseY","mouseFirst","mouseDeltaX","mouseDeltaY","windowHalfX","window","innerWidth","windowHalfY","innerHeight","width","height","postprocessing","cameraRadius","cameraHeight","cameraAngle","adjustedZero","setY","container","document","getElementById","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","ambientLight","directionalLight","position","target","copy","updateWorldMatrix","helper","geoms","lines","createGeometries","msTiles","geom","geometry","createThreeGeometry","material","roughness","wireframe","mesh","color","depthTest","setFromPoints","line","cubeGeo","cube","initPostprocessing","autoClear","style","touchAction","addEventListener","onPointerMove","onWindowResize","bokeh","uniforms","event","isPrimary","prevX","prevY","clientX","clientY","shiftKey","aspect","updateProjectionMatrix","composer","renderPass","bokehPass","focus","aperture","maxblur","addPass","animate","requestAnimationFrame","render","time","sensitivity","sensitivityY","cameraX","cameraZ","camBase","lookAt","clone","sub","floor","Promise","all","then","gltf","children","className","gp","navigator","getGamepads","gamepad","buttons","axes","GLTFLoader","loader","url","onProgress","reject","load","a","Float32BufferAttribute","forEachHalfEdge","distance","calculateNormalFromHeightMap","z0","z1","z2","calculateNormal","ax","ay","az","bx","by","bz","nx","ny","nz","f","initFace","patchX","patchY","insert","getArea","initializeFaces","GeomPerMat","indices","vertices","normals","triFn","vOff","b","c","addVertices","addNormal","l","getVertex","idx","off","setIndex","setAttribute","tileNameLookup","getDistance","dz","getStats","diffs","median","len","half","diff","reduce","getEdgesByHeightDifference","edgesCounted","differences","abs","sort","MARK_FACES","tt","biome3","biome2","biome1","biome0","localBiomes","multiMode","tileName","vertex0","vertex1","vertex2","vertex3","tile","type","verticesIn","attributes","normalsIn","normal","indexIn","tri","x3","z3","y3","xIn","yIn","zIn","scale","rx2","ry2","rz2","localUp","rx0","ry0","rz0","rx1","ry1","rz1","rnx","rny","rnz","WATER","REEDS","SNOW","ROCK","clamp","names","values","indexes","outer","fn"],"sourceRoot":""}